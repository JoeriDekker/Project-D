### YamlMime:ManagedReference
items:
- uid: WAMServer.Repositories.DbUserRepository
  commentId: T:WAMServer.Repositories.DbUserRepository
  id: DbUserRepository
  parent: WAMServer.Repositories
  children:
  - WAMServer.Repositories.DbUserRepository.#ctor(WAMServer.Models.WamDBContext)
  - WAMServer.Repositories.DbUserRepository.AddAsync(WAMServer.Models.User)
  - WAMServer.Repositories.DbUserRepository.DeleteAsync(System.Guid)
  - WAMServer.Repositories.DbUserRepository.Get(System.Guid)
  - WAMServer.Repositories.DbUserRepository.GetAllAsync
  - WAMServer.Repositories.DbUserRepository.UpdateAsync(WAMServer.Models.User)
  langs:
  - csharp
  - vb
  name: DbUserRepository
  nameWithType: DbUserRepository
  fullName: WAMServer.Repositories.DbUserRepository
  type: Class
  source:
    remote:
      path: server/Repositories/DbUserRepository.cs
      branch: fix/logincontroller-docs
      repo: https://github.com/JoeriDekker/Project-D.git
    id: DbUserRepository
    path: Repositories/DbUserRepository.cs
    startLine: 10
  assemblies:
  - server
  namespace: WAMServer.Repositories
  summary: This class is responsible for handling the database operations for the User entity.
  example: []
  syntax:
    content: 'public class DbUserRepository : IRepository<User>'
    content.vb: Public Class DbUserRepository Implements IRepository(Of User)
  inheritance:
  - System.Object
  implements:
  - WAMServer.Interfaces.IRepository{WAMServer.Models.User}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: WAMServer.Repositories.DbUserRepository.#ctor(WAMServer.Models.WamDBContext)
  commentId: M:WAMServer.Repositories.DbUserRepository.#ctor(WAMServer.Models.WamDBContext)
  id: '#ctor(WAMServer.Models.WamDBContext)'
  parent: WAMServer.Repositories.DbUserRepository
  langs:
  - csharp
  - vb
  name: DbUserRepository(WamDBContext)
  nameWithType: DbUserRepository.DbUserRepository(WamDBContext)
  fullName: WAMServer.Repositories.DbUserRepository.DbUserRepository(WAMServer.Models.WamDBContext)
  type: Constructor
  source:
    remote:
      path: server/Repositories/DbUserRepository.cs
      branch: fix/logincontroller-docs
      repo: https://github.com/JoeriDekker/Project-D.git
    id: .ctor
    path: Repositories/DbUserRepository.cs
    startLine: 14
  assemblies:
  - server
  namespace: WAMServer.Repositories
  syntax:
    content: public DbUserRepository(WamDBContext context)
    parameters:
    - id: context
      type: WAMServer.Models.WamDBContext
    content.vb: Public Sub New(context As WamDBContext)
  overload: WAMServer.Repositories.DbUserRepository.#ctor*
  nameWithType.vb: DbUserRepository.New(WamDBContext)
  fullName.vb: WAMServer.Repositories.DbUserRepository.New(WAMServer.Models.WamDBContext)
  name.vb: New(WamDBContext)
- uid: WAMServer.Repositories.DbUserRepository.AddAsync(WAMServer.Models.User)
  commentId: M:WAMServer.Repositories.DbUserRepository.AddAsync(WAMServer.Models.User)
  id: AddAsync(WAMServer.Models.User)
  parent: WAMServer.Repositories.DbUserRepository
  langs:
  - csharp
  - vb
  name: AddAsync(User)
  nameWithType: DbUserRepository.AddAsync(User)
  fullName: WAMServer.Repositories.DbUserRepository.AddAsync(WAMServer.Models.User)
  type: Method
  source:
    remote:
      path: server/Repositories/DbUserRepository.cs
      branch: fix/logincontroller-docs
      repo: https://github.com/JoeriDekker/Project-D.git
    id: AddAsync
    path: Repositories/DbUserRepository.cs
    startLine: 24
  assemblies:
  - server
  namespace: WAMServer.Repositories
  summary: Adds a user to the database in an asynchronous manner.
  example: []
  syntax:
    content: public Task<User> AddAsync(User entity)
    parameters:
    - id: entity
      type: WAMServer.Models.User
      description: The entity to be added, in this case the user.
    return:
      type: System.Threading.Tasks.Task{WAMServer.Models.User}
      description: The created user.
    content.vb: Public Function AddAsync(entity As User) As Task(Of User)
  overload: WAMServer.Repositories.DbUserRepository.AddAsync*
  implements:
  - WAMServer.Interfaces.IRepository{WAMServer.Models.User}.AddAsync(WAMServer.Models.User)
- uid: WAMServer.Repositories.DbUserRepository.DeleteAsync(System.Guid)
  commentId: M:WAMServer.Repositories.DbUserRepository.DeleteAsync(System.Guid)
  id: DeleteAsync(System.Guid)
  parent: WAMServer.Repositories.DbUserRepository
  langs:
  - csharp
  - vb
  name: DeleteAsync(Guid)
  nameWithType: DbUserRepository.DeleteAsync(Guid)
  fullName: WAMServer.Repositories.DbUserRepository.DeleteAsync(System.Guid)
  type: Method
  source:
    remote:
      path: server/Repositories/DbUserRepository.cs
      branch: fix/logincontroller-docs
      repo: https://github.com/JoeriDekker/Project-D.git
    id: DeleteAsync
    path: Repositories/DbUserRepository.cs
    startLine: 31
  assemblies:
  - server
  namespace: WAMServer.Repositories
  example: []
  syntax:
    content: public Task<User> DeleteAsync(Guid id)
    parameters:
    - id: id
      type: System.Guid
    return:
      type: System.Threading.Tasks.Task{WAMServer.Models.User}
    content.vb: Public Function DeleteAsync(id As Guid) As Task(Of User)
  overload: WAMServer.Repositories.DbUserRepository.DeleteAsync*
  implements:
  - WAMServer.Interfaces.IRepository{WAMServer.Models.User}.DeleteAsync(System.Guid)
- uid: WAMServer.Repositories.DbUserRepository.Get(System.Guid)
  commentId: M:WAMServer.Repositories.DbUserRepository.Get(System.Guid)
  id: Get(System.Guid)
  parent: WAMServer.Repositories.DbUserRepository
  langs:
  - csharp
  - vb
  name: Get(Guid)
  nameWithType: DbUserRepository.Get(Guid)
  fullName: WAMServer.Repositories.DbUserRepository.Get(System.Guid)
  type: Method
  source:
    remote:
      path: server/Repositories/DbUserRepository.cs
      branch: fix/logincontroller-docs
      repo: https://github.com/JoeriDekker/Project-D.git
    id: Get
    path: Repositories/DbUserRepository.cs
    startLine: 41
  assemblies:
  - server
  namespace: WAMServer.Repositories
  summary: Gets a user from the database by it's id.
  example: []
  syntax:
    content: public User? Get(Guid id)
    parameters:
    - id: id
      type: System.Guid
      description: The id of the user to be fetched
    return:
      type: WAMServer.Models.User
      description: Returns the user from the database if it exists, otherwise a null.
    content.vb: Public Function [Get](id As Guid) As User
  overload: WAMServer.Repositories.DbUserRepository.Get*
  implements:
  - WAMServer.Interfaces.IRepository{WAMServer.Models.User}.Get(System.Guid)
- uid: WAMServer.Repositories.DbUserRepository.GetAllAsync
  commentId: M:WAMServer.Repositories.DbUserRepository.GetAllAsync
  id: GetAllAsync
  parent: WAMServer.Repositories.DbUserRepository
  langs:
  - csharp
  - vb
  name: GetAllAsync()
  nameWithType: DbUserRepository.GetAllAsync()
  fullName: WAMServer.Repositories.DbUserRepository.GetAllAsync()
  type: Method
  source:
    remote:
      path: server/Repositories/DbUserRepository.cs
      branch: fix/logincontroller-docs
      repo: https://github.com/JoeriDekker/Project-D.git
    id: GetAllAsync
    path: Repositories/DbUserRepository.cs
    startLine: 46
  assemblies:
  - server
  namespace: WAMServer.Repositories
  example: []
  syntax:
    content: public Task<IEnumerable<User>> GetAllAsync()
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{WAMServer.Models.User}}
    content.vb: Public Function GetAllAsync() As Task(Of IEnumerable(Of User))
  overload: WAMServer.Repositories.DbUserRepository.GetAllAsync*
  implements:
  - WAMServer.Interfaces.IRepository{WAMServer.Models.User}.GetAllAsync
- uid: WAMServer.Repositories.DbUserRepository.UpdateAsync(WAMServer.Models.User)
  commentId: M:WAMServer.Repositories.DbUserRepository.UpdateAsync(WAMServer.Models.User)
  id: UpdateAsync(WAMServer.Models.User)
  parent: WAMServer.Repositories.DbUserRepository
  langs:
  - csharp
  - vb
  name: UpdateAsync(User)
  nameWithType: DbUserRepository.UpdateAsync(User)
  fullName: WAMServer.Repositories.DbUserRepository.UpdateAsync(WAMServer.Models.User)
  type: Method
  source:
    remote:
      path: server/Repositories/DbUserRepository.cs
      branch: fix/logincontroller-docs
      repo: https://github.com/JoeriDekker/Project-D.git
    id: UpdateAsync
    path: Repositories/DbUserRepository.cs
    startLine: 51
  assemblies:
  - server
  namespace: WAMServer.Repositories
  example: []
  syntax:
    content: public Task<User> UpdateAsync(User entity)
    parameters:
    - id: entity
      type: WAMServer.Models.User
    return:
      type: System.Threading.Tasks.Task{WAMServer.Models.User}
    content.vb: Public Function UpdateAsync(entity As User) As Task(Of User)
  overload: WAMServer.Repositories.DbUserRepository.UpdateAsync*
  implements:
  - WAMServer.Interfaces.IRepository{WAMServer.Models.User}.UpdateAsync(WAMServer.Models.User)
references:
- uid: WAMServer.Repositories
  commentId: N:WAMServer.Repositories
  href: WAMServer.html
  name: WAMServer.Repositories
  nameWithType: WAMServer.Repositories
  fullName: WAMServer.Repositories
  spec.csharp:
  - uid: WAMServer
    name: WAMServer
    href: WAMServer.html
  - name: .
  - uid: WAMServer.Repositories
    name: Repositories
    href: WAMServer.Repositories.html
  spec.vb:
  - uid: WAMServer
    name: WAMServer
    href: WAMServer.html
  - name: .
  - uid: WAMServer.Repositories
    name: Repositories
    href: WAMServer.Repositories.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: WAMServer.Interfaces.IRepository{WAMServer.Models.User}
  commentId: T:WAMServer.Interfaces.IRepository{WAMServer.Models.User}
  parent: WAMServer.Interfaces
  definition: WAMServer.Interfaces.IRepository`1
  href: WAMServer.Interfaces.IRepository-1.html
  name: IRepository<User>
  nameWithType: IRepository<User>
  fullName: WAMServer.Interfaces.IRepository<WAMServer.Models.User>
  nameWithType.vb: IRepository(Of User)
  fullName.vb: WAMServer.Interfaces.IRepository(Of WAMServer.Models.User)
  name.vb: IRepository(Of User)
  spec.csharp:
  - uid: WAMServer.Interfaces.IRepository`1
    name: IRepository
    href: WAMServer.Interfaces.IRepository-1.html
  - name: <
  - uid: WAMServer.Models.User
    name: User
    href: WAMServer.Models.User.html
  - name: '>'
  spec.vb:
  - uid: WAMServer.Interfaces.IRepository`1
    name: IRepository
    href: WAMServer.Interfaces.IRepository-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: WAMServer.Models.User
    name: User
    href: WAMServer.Models.User.html
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: WAMServer.Interfaces.IRepository`1
  commentId: T:WAMServer.Interfaces.IRepository`1
  href: WAMServer.Interfaces.IRepository-1.html
  name: IRepository<T>
  nameWithType: IRepository<T>
  fullName: WAMServer.Interfaces.IRepository<T>
  nameWithType.vb: IRepository(Of T)
  fullName.vb: WAMServer.Interfaces.IRepository(Of T)
  name.vb: IRepository(Of T)
  spec.csharp:
  - uid: WAMServer.Interfaces.IRepository`1
    name: IRepository
    href: WAMServer.Interfaces.IRepository-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: WAMServer.Interfaces.IRepository`1
    name: IRepository
    href: WAMServer.Interfaces.IRepository-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: WAMServer.Interfaces
  commentId: N:WAMServer.Interfaces
  href: WAMServer.html
  name: WAMServer.Interfaces
  nameWithType: WAMServer.Interfaces
  fullName: WAMServer.Interfaces
  spec.csharp:
  - uid: WAMServer
    name: WAMServer
    href: WAMServer.html
  - name: .
  - uid: WAMServer.Interfaces
    name: Interfaces
    href: WAMServer.Interfaces.html
  spec.vb:
  - uid: WAMServer
    name: WAMServer
    href: WAMServer.html
  - name: .
  - uid: WAMServer.Interfaces
    name: Interfaces
    href: WAMServer.Interfaces.html
- uid: WAMServer.Repositories.DbUserRepository.#ctor*
  commentId: Overload:WAMServer.Repositories.DbUserRepository.#ctor
  href: WAMServer.Repositories.DbUserRepository.html#WAMServer_Repositories_DbUserRepository__ctor_WAMServer_Models_WamDBContext_
  name: DbUserRepository
  nameWithType: DbUserRepository.DbUserRepository
  fullName: WAMServer.Repositories.DbUserRepository.DbUserRepository
  nameWithType.vb: DbUserRepository.New
  fullName.vb: WAMServer.Repositories.DbUserRepository.New
  name.vb: New
- uid: WAMServer.Models.WamDBContext
  commentId: T:WAMServer.Models.WamDBContext
  parent: WAMServer.Models
  href: WAMServer.Models.WamDBContext.html
  name: WamDBContext
  nameWithType: WamDBContext
  fullName: WAMServer.Models.WamDBContext
- uid: WAMServer.Models
  commentId: N:WAMServer.Models
  href: WAMServer.html
  name: WAMServer.Models
  nameWithType: WAMServer.Models
  fullName: WAMServer.Models
  spec.csharp:
  - uid: WAMServer
    name: WAMServer
    href: WAMServer.html
  - name: .
  - uid: WAMServer.Models
    name: Models
    href: WAMServer.Models.html
  spec.vb:
  - uid: WAMServer
    name: WAMServer
    href: WAMServer.html
  - name: .
  - uid: WAMServer.Models
    name: Models
    href: WAMServer.Models.html
- uid: WAMServer.Repositories.DbUserRepository.AddAsync*
  commentId: Overload:WAMServer.Repositories.DbUserRepository.AddAsync
  href: WAMServer.Repositories.DbUserRepository.html#WAMServer_Repositories_DbUserRepository_AddAsync_WAMServer_Models_User_
  name: AddAsync
  nameWithType: DbUserRepository.AddAsync
  fullName: WAMServer.Repositories.DbUserRepository.AddAsync
- uid: WAMServer.Interfaces.IRepository{WAMServer.Models.User}.AddAsync(WAMServer.Models.User)
  commentId: M:WAMServer.Interfaces.IRepository{WAMServer.Models.User}.AddAsync(WAMServer.Models.User)
  parent: WAMServer.Interfaces.IRepository{WAMServer.Models.User}
  definition: WAMServer.Interfaces.IRepository`1.AddAsync(`0)
  href: WAMServer.Interfaces.IRepository-1.html#WAMServer_Interfaces_IRepository_1_AddAsync__0_
  name: AddAsync(User)
  nameWithType: IRepository<User>.AddAsync(User)
  fullName: WAMServer.Interfaces.IRepository<WAMServer.Models.User>.AddAsync(WAMServer.Models.User)
  nameWithType.vb: IRepository(Of User).AddAsync(User)
  fullName.vb: WAMServer.Interfaces.IRepository(Of WAMServer.Models.User).AddAsync(WAMServer.Models.User)
  spec.csharp:
  - uid: WAMServer.Interfaces.IRepository{WAMServer.Models.User}.AddAsync(WAMServer.Models.User)
    name: AddAsync
    href: WAMServer.Interfaces.IRepository-1.html#WAMServer_Interfaces_IRepository_1_AddAsync__0_
  - name: (
  - uid: WAMServer.Models.User
    name: User
    href: WAMServer.Models.User.html
  - name: )
  spec.vb:
  - uid: WAMServer.Interfaces.IRepository{WAMServer.Models.User}.AddAsync(WAMServer.Models.User)
    name: AddAsync
    href: WAMServer.Interfaces.IRepository-1.html#WAMServer_Interfaces_IRepository_1_AddAsync__0_
  - name: (
  - uid: WAMServer.Models.User
    name: User
    href: WAMServer.Models.User.html
  - name: )
- uid: WAMServer.Models.User
  commentId: T:WAMServer.Models.User
  parent: WAMServer.Models
  href: WAMServer.Models.User.html
  name: User
  nameWithType: User
  fullName: WAMServer.Models.User
- uid: System.Threading.Tasks.Task{WAMServer.Models.User}
  commentId: T:System.Threading.Tasks.Task{WAMServer.Models.User}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<User>
  nameWithType: Task<User>
  fullName: System.Threading.Tasks.Task<WAMServer.Models.User>
  nameWithType.vb: Task(Of User)
  fullName.vb: System.Threading.Tasks.Task(Of WAMServer.Models.User)
  name.vb: Task(Of User)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: WAMServer.Models.User
    name: User
    href: WAMServer.Models.User.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: WAMServer.Models.User
    name: User
    href: WAMServer.Models.User.html
  - name: )
- uid: WAMServer.Interfaces.IRepository`1.AddAsync(`0)
  commentId: M:WAMServer.Interfaces.IRepository`1.AddAsync(`0)
  href: WAMServer.Interfaces.IRepository-1.html#WAMServer_Interfaces_IRepository_1_AddAsync__0_
  name: AddAsync(T)
  nameWithType: IRepository<T>.AddAsync(T)
  fullName: WAMServer.Interfaces.IRepository<T>.AddAsync(T)
  nameWithType.vb: IRepository(Of T).AddAsync(T)
  fullName.vb: WAMServer.Interfaces.IRepository(Of T).AddAsync(T)
  spec.csharp:
  - uid: WAMServer.Interfaces.IRepository`1.AddAsync(`0)
    name: AddAsync
    href: WAMServer.Interfaces.IRepository-1.html#WAMServer_Interfaces_IRepository_1_AddAsync__0_
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: WAMServer.Interfaces.IRepository`1.AddAsync(`0)
    name: AddAsync
    href: WAMServer.Interfaces.IRepository-1.html#WAMServer_Interfaces_IRepository_1_AddAsync__0_
  - name: (
  - name: T
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: WAMServer.Repositories.DbUserRepository.DeleteAsync*
  commentId: Overload:WAMServer.Repositories.DbUserRepository.DeleteAsync
  href: WAMServer.Repositories.DbUserRepository.html#WAMServer_Repositories_DbUserRepository_DeleteAsync_System_Guid_
  name: DeleteAsync
  nameWithType: DbUserRepository.DeleteAsync
  fullName: WAMServer.Repositories.DbUserRepository.DeleteAsync
- uid: WAMServer.Interfaces.IRepository{WAMServer.Models.User}.DeleteAsync(System.Guid)
  commentId: M:WAMServer.Interfaces.IRepository{WAMServer.Models.User}.DeleteAsync(System.Guid)
  parent: WAMServer.Interfaces.IRepository{WAMServer.Models.User}
  definition: WAMServer.Interfaces.IRepository`1.DeleteAsync(System.Guid)
  href: WAMServer.Interfaces.IRepository-1.html#WAMServer_Interfaces_IRepository_1_DeleteAsync_System_Guid_
  name: DeleteAsync(Guid)
  nameWithType: IRepository<User>.DeleteAsync(Guid)
  fullName: WAMServer.Interfaces.IRepository<WAMServer.Models.User>.DeleteAsync(System.Guid)
  nameWithType.vb: IRepository(Of User).DeleteAsync(Guid)
  fullName.vb: WAMServer.Interfaces.IRepository(Of WAMServer.Models.User).DeleteAsync(System.Guid)
  spec.csharp:
  - uid: WAMServer.Interfaces.IRepository{WAMServer.Models.User}.DeleteAsync(System.Guid)
    name: DeleteAsync
    href: WAMServer.Interfaces.IRepository-1.html#WAMServer_Interfaces_IRepository_1_DeleteAsync_System_Guid_
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: )
  spec.vb:
  - uid: WAMServer.Interfaces.IRepository{WAMServer.Models.User}.DeleteAsync(System.Guid)
    name: DeleteAsync
    href: WAMServer.Interfaces.IRepository-1.html#WAMServer_Interfaces_IRepository_1_DeleteAsync_System_Guid_
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: )
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.guid
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: WAMServer.Interfaces.IRepository`1.DeleteAsync(System.Guid)
  commentId: M:WAMServer.Interfaces.IRepository`1.DeleteAsync(System.Guid)
  isExternal: true
  href: WAMServer.Interfaces.IRepository-1.html#WAMServer_Interfaces_IRepository_1_DeleteAsync_System_Guid_
  name: DeleteAsync(Guid)
  nameWithType: IRepository<T>.DeleteAsync(Guid)
  fullName: WAMServer.Interfaces.IRepository<T>.DeleteAsync(System.Guid)
  nameWithType.vb: IRepository(Of T).DeleteAsync(Guid)
  fullName.vb: WAMServer.Interfaces.IRepository(Of T).DeleteAsync(System.Guid)
  spec.csharp:
  - uid: WAMServer.Interfaces.IRepository`1.DeleteAsync(System.Guid)
    name: DeleteAsync
    href: WAMServer.Interfaces.IRepository-1.html#WAMServer_Interfaces_IRepository_1_DeleteAsync_System_Guid_
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: )
  spec.vb:
  - uid: WAMServer.Interfaces.IRepository`1.DeleteAsync(System.Guid)
    name: DeleteAsync
    href: WAMServer.Interfaces.IRepository-1.html#WAMServer_Interfaces_IRepository_1_DeleteAsync_System_Guid_
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: )
- uid: WAMServer.Repositories.DbUserRepository.Get*
  commentId: Overload:WAMServer.Repositories.DbUserRepository.Get
  href: WAMServer.Repositories.DbUserRepository.html#WAMServer_Repositories_DbUserRepository_Get_System_Guid_
  name: Get
  nameWithType: DbUserRepository.Get
  fullName: WAMServer.Repositories.DbUserRepository.Get
- uid: WAMServer.Interfaces.IRepository{WAMServer.Models.User}.Get(System.Guid)
  commentId: M:WAMServer.Interfaces.IRepository{WAMServer.Models.User}.Get(System.Guid)
  parent: WAMServer.Interfaces.IRepository{WAMServer.Models.User}
  definition: WAMServer.Interfaces.IRepository`1.Get(System.Guid)
  href: WAMServer.Interfaces.IRepository-1.html#WAMServer_Interfaces_IRepository_1_Get_System_Guid_
  name: Get(Guid)
  nameWithType: IRepository<User>.Get(Guid)
  fullName: WAMServer.Interfaces.IRepository<WAMServer.Models.User>.Get(System.Guid)
  nameWithType.vb: IRepository(Of User).Get(Guid)
  fullName.vb: WAMServer.Interfaces.IRepository(Of WAMServer.Models.User).Get(System.Guid)
  spec.csharp:
  - uid: WAMServer.Interfaces.IRepository{WAMServer.Models.User}.Get(System.Guid)
    name: Get
    href: WAMServer.Interfaces.IRepository-1.html#WAMServer_Interfaces_IRepository_1_Get_System_Guid_
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: )
  spec.vb:
  - uid: WAMServer.Interfaces.IRepository{WAMServer.Models.User}.Get(System.Guid)
    name: Get
    href: WAMServer.Interfaces.IRepository-1.html#WAMServer_Interfaces_IRepository_1_Get_System_Guid_
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: )
- uid: WAMServer.Interfaces.IRepository`1.Get(System.Guid)
  commentId: M:WAMServer.Interfaces.IRepository`1.Get(System.Guid)
  isExternal: true
  href: WAMServer.Interfaces.IRepository-1.html#WAMServer_Interfaces_IRepository_1_Get_System_Guid_
  name: Get(Guid)
  nameWithType: IRepository<T>.Get(Guid)
  fullName: WAMServer.Interfaces.IRepository<T>.Get(System.Guid)
  nameWithType.vb: IRepository(Of T).Get(Guid)
  fullName.vb: WAMServer.Interfaces.IRepository(Of T).Get(System.Guid)
  spec.csharp:
  - uid: WAMServer.Interfaces.IRepository`1.Get(System.Guid)
    name: Get
    href: WAMServer.Interfaces.IRepository-1.html#WAMServer_Interfaces_IRepository_1_Get_System_Guid_
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: )
  spec.vb:
  - uid: WAMServer.Interfaces.IRepository`1.Get(System.Guid)
    name: Get
    href: WAMServer.Interfaces.IRepository-1.html#WAMServer_Interfaces_IRepository_1_Get_System_Guid_
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: )
- uid: WAMServer.Repositories.DbUserRepository.GetAllAsync*
  commentId: Overload:WAMServer.Repositories.DbUserRepository.GetAllAsync
  href: WAMServer.Repositories.DbUserRepository.html#WAMServer_Repositories_DbUserRepository_GetAllAsync
  name: GetAllAsync
  nameWithType: DbUserRepository.GetAllAsync
  fullName: WAMServer.Repositories.DbUserRepository.GetAllAsync
- uid: WAMServer.Interfaces.IRepository{WAMServer.Models.User}.GetAllAsync
  commentId: M:WAMServer.Interfaces.IRepository{WAMServer.Models.User}.GetAllAsync
  parent: WAMServer.Interfaces.IRepository{WAMServer.Models.User}
  definition: WAMServer.Interfaces.IRepository`1.GetAllAsync
  href: WAMServer.Interfaces.IRepository-1.html#WAMServer_Interfaces_IRepository_1_GetAllAsync
  name: GetAllAsync()
  nameWithType: IRepository<User>.GetAllAsync()
  fullName: WAMServer.Interfaces.IRepository<WAMServer.Models.User>.GetAllAsync()
  nameWithType.vb: IRepository(Of User).GetAllAsync()
  fullName.vb: WAMServer.Interfaces.IRepository(Of WAMServer.Models.User).GetAllAsync()
  spec.csharp:
  - uid: WAMServer.Interfaces.IRepository{WAMServer.Models.User}.GetAllAsync
    name: GetAllAsync
    href: WAMServer.Interfaces.IRepository-1.html#WAMServer_Interfaces_IRepository_1_GetAllAsync
  - name: (
  - name: )
  spec.vb:
  - uid: WAMServer.Interfaces.IRepository{WAMServer.Models.User}.GetAllAsync
    name: GetAllAsync
    href: WAMServer.Interfaces.IRepository-1.html#WAMServer_Interfaces_IRepository_1_GetAllAsync
  - name: (
  - name: )
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{WAMServer.Models.User}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{WAMServer.Models.User}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IEnumerable<User>>
  nameWithType: Task<IEnumerable<User>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<WAMServer.Models.User>>
  nameWithType.vb: Task(Of IEnumerable(Of User))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IEnumerable(Of WAMServer.Models.User))
  name.vb: Task(Of IEnumerable(Of User))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: WAMServer.Models.User
    name: User
    href: WAMServer.Models.User.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: WAMServer.Models.User
    name: User
    href: WAMServer.Models.User.html
  - name: )
  - name: )
- uid: WAMServer.Interfaces.IRepository`1.GetAllAsync
  commentId: M:WAMServer.Interfaces.IRepository`1.GetAllAsync
  href: WAMServer.Interfaces.IRepository-1.html#WAMServer_Interfaces_IRepository_1_GetAllAsync
  name: GetAllAsync()
  nameWithType: IRepository<T>.GetAllAsync()
  fullName: WAMServer.Interfaces.IRepository<T>.GetAllAsync()
  nameWithType.vb: IRepository(Of T).GetAllAsync()
  fullName.vb: WAMServer.Interfaces.IRepository(Of T).GetAllAsync()
  spec.csharp:
  - uid: WAMServer.Interfaces.IRepository`1.GetAllAsync
    name: GetAllAsync
    href: WAMServer.Interfaces.IRepository-1.html#WAMServer_Interfaces_IRepository_1_GetAllAsync
  - name: (
  - name: )
  spec.vb:
  - uid: WAMServer.Interfaces.IRepository`1.GetAllAsync
    name: GetAllAsync
    href: WAMServer.Interfaces.IRepository-1.html#WAMServer_Interfaces_IRepository_1_GetAllAsync
  - name: (
  - name: )
- uid: WAMServer.Repositories.DbUserRepository.UpdateAsync*
  commentId: Overload:WAMServer.Repositories.DbUserRepository.UpdateAsync
  href: WAMServer.Repositories.DbUserRepository.html#WAMServer_Repositories_DbUserRepository_UpdateAsync_WAMServer_Models_User_
  name: UpdateAsync
  nameWithType: DbUserRepository.UpdateAsync
  fullName: WAMServer.Repositories.DbUserRepository.UpdateAsync
- uid: WAMServer.Interfaces.IRepository{WAMServer.Models.User}.UpdateAsync(WAMServer.Models.User)
  commentId: M:WAMServer.Interfaces.IRepository{WAMServer.Models.User}.UpdateAsync(WAMServer.Models.User)
  parent: WAMServer.Interfaces.IRepository{WAMServer.Models.User}
  definition: WAMServer.Interfaces.IRepository`1.UpdateAsync(`0)
  href: WAMServer.Interfaces.IRepository-1.html#WAMServer_Interfaces_IRepository_1_UpdateAsync__0_
  name: UpdateAsync(User)
  nameWithType: IRepository<User>.UpdateAsync(User)
  fullName: WAMServer.Interfaces.IRepository<WAMServer.Models.User>.UpdateAsync(WAMServer.Models.User)
  nameWithType.vb: IRepository(Of User).UpdateAsync(User)
  fullName.vb: WAMServer.Interfaces.IRepository(Of WAMServer.Models.User).UpdateAsync(WAMServer.Models.User)
  spec.csharp:
  - uid: WAMServer.Interfaces.IRepository{WAMServer.Models.User}.UpdateAsync(WAMServer.Models.User)
    name: UpdateAsync
    href: WAMServer.Interfaces.IRepository-1.html#WAMServer_Interfaces_IRepository_1_UpdateAsync__0_
  - name: (
  - uid: WAMServer.Models.User
    name: User
    href: WAMServer.Models.User.html
  - name: )
  spec.vb:
  - uid: WAMServer.Interfaces.IRepository{WAMServer.Models.User}.UpdateAsync(WAMServer.Models.User)
    name: UpdateAsync
    href: WAMServer.Interfaces.IRepository-1.html#WAMServer_Interfaces_IRepository_1_UpdateAsync__0_
  - name: (
  - uid: WAMServer.Models.User
    name: User
    href: WAMServer.Models.User.html
  - name: )
- uid: WAMServer.Interfaces.IRepository`1.UpdateAsync(`0)
  commentId: M:WAMServer.Interfaces.IRepository`1.UpdateAsync(`0)
  href: WAMServer.Interfaces.IRepository-1.html#WAMServer_Interfaces_IRepository_1_UpdateAsync__0_
  name: UpdateAsync(T)
  nameWithType: IRepository<T>.UpdateAsync(T)
  fullName: WAMServer.Interfaces.IRepository<T>.UpdateAsync(T)
  nameWithType.vb: IRepository(Of T).UpdateAsync(T)
  fullName.vb: WAMServer.Interfaces.IRepository(Of T).UpdateAsync(T)
  spec.csharp:
  - uid: WAMServer.Interfaces.IRepository`1.UpdateAsync(`0)
    name: UpdateAsync
    href: WAMServer.Interfaces.IRepository-1.html#WAMServer_Interfaces_IRepository_1_UpdateAsync__0_
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: WAMServer.Interfaces.IRepository`1.UpdateAsync(`0)
    name: UpdateAsync
    href: WAMServer.Interfaces.IRepository-1.html#WAMServer_Interfaces_IRepository_1_UpdateAsync__0_
  - name: (
  - name: T
  - name: )
