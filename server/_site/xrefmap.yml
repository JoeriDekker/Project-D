### YamlMime:XRefMap
sorted: true
references:
- uid: WAMServer
  name: WAMServer
  href: api/WAMServer.html
  commentId: N:WAMServer
  fullName: WAMServer
  nameWithType: WAMServer
- uid: WAMServer.Controllers
  name: WAMServer.Controllers
  href: api/WAMServer.Controllers.html
  commentId: N:WAMServer.Controllers
  fullName: WAMServer.Controllers
  nameWithType: WAMServer.Controllers
- uid: WAMServer.Controllers.LoginController
  name: LoginController
  href: api/WAMServer.Controllers.LoginController.html
  commentId: T:WAMServer.Controllers.LoginController
  fullName: WAMServer.Controllers.LoginController
  nameWithType: LoginController
- uid: WAMServer.Controllers.LoginController.#ctor(WAMServer.Interfaces.IUserRepository,Microsoft.Extensions.Configuration.IConfiguration)
  name: LoginController(IUserRepository, IConfiguration)
  href: api/WAMServer.Controllers.LoginController.html#WAMServer_Controllers_LoginController__ctor_WAMServer_Interfaces_IUserRepository_Microsoft_Extensions_Configuration_IConfiguration_
  commentId: M:WAMServer.Controllers.LoginController.#ctor(WAMServer.Interfaces.IUserRepository,Microsoft.Extensions.Configuration.IConfiguration)
  name.vb: New(IUserRepository, IConfiguration)
  fullName: WAMServer.Controllers.LoginController.LoginController(WAMServer.Interfaces.IUserRepository, Microsoft.Extensions.Configuration.IConfiguration)
  fullName.vb: WAMServer.Controllers.LoginController.New(WAMServer.Interfaces.IUserRepository, Microsoft.Extensions.Configuration.IConfiguration)
  nameWithType: LoginController.LoginController(IUserRepository, IConfiguration)
  nameWithType.vb: LoginController.New(IUserRepository, IConfiguration)
- uid: WAMServer.Controllers.LoginController.#ctor*
  name: LoginController
  href: api/WAMServer.Controllers.LoginController.html#WAMServer_Controllers_LoginController__ctor_
  commentId: Overload:WAMServer.Controllers.LoginController.#ctor
  isSpec: "True"
  name.vb: New
  fullName: WAMServer.Controllers.LoginController.LoginController
  fullName.vb: WAMServer.Controllers.LoginController.New
  nameWithType: LoginController.LoginController
  nameWithType.vb: LoginController.New
- uid: WAMServer.Controllers.LoginController.AuthenticateUserReturnNullIfUnable(System.String,System.String)
  name: AuthenticateUserReturnNullIfUnable(string, string)
  href: api/WAMServer.Controllers.LoginController.html#WAMServer_Controllers_LoginController_AuthenticateUserReturnNullIfUnable_System_String_System_String_
  commentId: M:WAMServer.Controllers.LoginController.AuthenticateUserReturnNullIfUnable(System.String,System.String)
  name.vb: AuthenticateUserReturnNullIfUnable(String, String)
  fullName: WAMServer.Controllers.LoginController.AuthenticateUserReturnNullIfUnable(string, string)
  fullName.vb: WAMServer.Controllers.LoginController.AuthenticateUserReturnNullIfUnable(String, String)
  nameWithType: LoginController.AuthenticateUserReturnNullIfUnable(string, string)
  nameWithType.vb: LoginController.AuthenticateUserReturnNullIfUnable(String, String)
- uid: WAMServer.Controllers.LoginController.AuthenticateUserReturnNullIfUnable*
  name: AuthenticateUserReturnNullIfUnable
  href: api/WAMServer.Controllers.LoginController.html#WAMServer_Controllers_LoginController_AuthenticateUserReturnNullIfUnable_
  commentId: Overload:WAMServer.Controllers.LoginController.AuthenticateUserReturnNullIfUnable
  isSpec: "True"
  fullName: WAMServer.Controllers.LoginController.AuthenticateUserReturnNullIfUnable
  nameWithType: LoginController.AuthenticateUserReturnNullIfUnable
- uid: WAMServer.Controllers.LoginController.GenerateJSONWebToken(WAMServer.Models.User)
  name: GenerateJSONWebToken(User)
  href: api/WAMServer.Controllers.LoginController.html#WAMServer_Controllers_LoginController_GenerateJSONWebToken_WAMServer_Models_User_
  commentId: M:WAMServer.Controllers.LoginController.GenerateJSONWebToken(WAMServer.Models.User)
  fullName: WAMServer.Controllers.LoginController.GenerateJSONWebToken(WAMServer.Models.User)
  nameWithType: LoginController.GenerateJSONWebToken(User)
- uid: WAMServer.Controllers.LoginController.GenerateJSONWebToken*
  name: GenerateJSONWebToken
  href: api/WAMServer.Controllers.LoginController.html#WAMServer_Controllers_LoginController_GenerateJSONWebToken_
  commentId: Overload:WAMServer.Controllers.LoginController.GenerateJSONWebToken
  isSpec: "True"
  fullName: WAMServer.Controllers.LoginController.GenerateJSONWebToken
  nameWithType: LoginController.GenerateJSONWebToken
- uid: WAMServer.Controllers.LoginController.Login(WAMServer.Records.LoginBody)
  name: Login(LoginBody)
  href: api/WAMServer.Controllers.LoginController.html#WAMServer_Controllers_LoginController_Login_WAMServer_Records_LoginBody_
  commentId: M:WAMServer.Controllers.LoginController.Login(WAMServer.Records.LoginBody)
  fullName: WAMServer.Controllers.LoginController.Login(WAMServer.Records.LoginBody)
  nameWithType: LoginController.Login(LoginBody)
- uid: WAMServer.Controllers.LoginController.Login*
  name: Login
  href: api/WAMServer.Controllers.LoginController.html#WAMServer_Controllers_LoginController_Login_
  commentId: Overload:WAMServer.Controllers.LoginController.Login
  isSpec: "True"
  fullName: WAMServer.Controllers.LoginController.Login
  nameWithType: LoginController.Login
- uid: WAMServer.Controllers.UsersController
  name: UsersController
  href: api/WAMServer.Controllers.UsersController.html
  commentId: T:WAMServer.Controllers.UsersController
  fullName: WAMServer.Controllers.UsersController
  nameWithType: UsersController
- uid: WAMServer.Controllers.UsersController.#ctor(WAMServer.Interfaces.IUserRepository,WAMServer.Interfaces.IRepository{WAMServer.Models.Address})
  name: UsersController(IUserRepository, IRepository<Address>)
  href: api/WAMServer.Controllers.UsersController.html#WAMServer_Controllers_UsersController__ctor_WAMServer_Interfaces_IUserRepository_WAMServer_Interfaces_IRepository_WAMServer_Models_Address__
  commentId: M:WAMServer.Controllers.UsersController.#ctor(WAMServer.Interfaces.IUserRepository,WAMServer.Interfaces.IRepository{WAMServer.Models.Address})
  name.vb: New(IUserRepository, IRepository(Of Address))
  fullName: WAMServer.Controllers.UsersController.UsersController(WAMServer.Interfaces.IUserRepository, WAMServer.Interfaces.IRepository<WAMServer.Models.Address>)
  fullName.vb: WAMServer.Controllers.UsersController.New(WAMServer.Interfaces.IUserRepository, WAMServer.Interfaces.IRepository(Of WAMServer.Models.Address))
  nameWithType: UsersController.UsersController(IUserRepository, IRepository<Address>)
  nameWithType.vb: UsersController.New(IUserRepository, IRepository(Of Address))
- uid: WAMServer.Controllers.UsersController.#ctor*
  name: UsersController
  href: api/WAMServer.Controllers.UsersController.html#WAMServer_Controllers_UsersController__ctor_
  commentId: Overload:WAMServer.Controllers.UsersController.#ctor
  isSpec: "True"
  name.vb: New
  fullName: WAMServer.Controllers.UsersController.UsersController
  fullName.vb: WAMServer.Controllers.UsersController.New
  nameWithType: UsersController.UsersController
  nameWithType.vb: UsersController.New
- uid: WAMServer.Controllers.UsersController.GetUser
  name: GetUser()
  href: api/WAMServer.Controllers.UsersController.html#WAMServer_Controllers_UsersController_GetUser
  commentId: M:WAMServer.Controllers.UsersController.GetUser
  fullName: WAMServer.Controllers.UsersController.GetUser()
  nameWithType: UsersController.GetUser()
- uid: WAMServer.Controllers.UsersController.GetUser*
  name: GetUser
  href: api/WAMServer.Controllers.UsersController.html#WAMServer_Controllers_UsersController_GetUser_
  commentId: Overload:WAMServer.Controllers.UsersController.GetUser
  isSpec: "True"
  fullName: WAMServer.Controllers.UsersController.GetUser
  nameWithType: UsersController.GetUser
- uid: WAMServer.DTO
  name: WAMServer.DTO
  href: api/WAMServer.DTO.html
  commentId: N:WAMServer.DTO
  fullName: WAMServer.DTO
  nameWithType: WAMServer.DTO
- uid: WAMServer.DTO.UserDTO
  name: UserDTO
  href: api/WAMServer.DTO.UserDTO.html
  commentId: T:WAMServer.DTO.UserDTO
  fullName: WAMServer.DTO.UserDTO
  nameWithType: UserDTO
- uid: WAMServer.DTO.UserDTO.#ctor(System.Guid,System.String,System.String,System.String,WAMServer.Models.Address)
  name: UserDTO(Guid, string, string, string, Address)
  href: api/WAMServer.DTO.UserDTO.html#WAMServer_DTO_UserDTO__ctor_System_Guid_System_String_System_String_System_String_WAMServer_Models_Address_
  commentId: M:WAMServer.DTO.UserDTO.#ctor(System.Guid,System.String,System.String,System.String,WAMServer.Models.Address)
  name.vb: New(Guid, String, String, String, Address)
  fullName: WAMServer.DTO.UserDTO.UserDTO(System.Guid, string, string, string, WAMServer.Models.Address)
  fullName.vb: WAMServer.DTO.UserDTO.New(System.Guid, String, String, String, WAMServer.Models.Address)
  nameWithType: UserDTO.UserDTO(Guid, string, string, string, Address)
  nameWithType.vb: UserDTO.New(Guid, String, String, String, Address)
- uid: WAMServer.DTO.UserDTO.#ctor(WAMServer.Models.User)
  name: UserDTO(User)
  href: api/WAMServer.DTO.UserDTO.html#WAMServer_DTO_UserDTO__ctor_WAMServer_Models_User_
  commentId: M:WAMServer.DTO.UserDTO.#ctor(WAMServer.Models.User)
  name.vb: New(User)
  fullName: WAMServer.DTO.UserDTO.UserDTO(WAMServer.Models.User)
  fullName.vb: WAMServer.DTO.UserDTO.New(WAMServer.Models.User)
  nameWithType: UserDTO.UserDTO(User)
  nameWithType.vb: UserDTO.New(User)
- uid: WAMServer.DTO.UserDTO.#ctor*
  name: UserDTO
  href: api/WAMServer.DTO.UserDTO.html#WAMServer_DTO_UserDTO__ctor_
  commentId: Overload:WAMServer.DTO.UserDTO.#ctor
  isSpec: "True"
  name.vb: New
  fullName: WAMServer.DTO.UserDTO.UserDTO
  fullName.vb: WAMServer.DTO.UserDTO.New
  nameWithType: UserDTO.UserDTO
  nameWithType.vb: UserDTO.New
- uid: WAMServer.DTO.UserDTO.Address
  name: Address
  href: api/WAMServer.DTO.UserDTO.html#WAMServer_DTO_UserDTO_Address
  commentId: P:WAMServer.DTO.UserDTO.Address
  fullName: WAMServer.DTO.UserDTO.Address
  nameWithType: UserDTO.Address
- uid: WAMServer.DTO.UserDTO.Address*
  name: Address
  href: api/WAMServer.DTO.UserDTO.html#WAMServer_DTO_UserDTO_Address_
  commentId: Overload:WAMServer.DTO.UserDTO.Address
  isSpec: "True"
  fullName: WAMServer.DTO.UserDTO.Address
  nameWithType: UserDTO.Address
- uid: WAMServer.DTO.UserDTO.Email
  name: Email
  href: api/WAMServer.DTO.UserDTO.html#WAMServer_DTO_UserDTO_Email
  commentId: P:WAMServer.DTO.UserDTO.Email
  fullName: WAMServer.DTO.UserDTO.Email
  nameWithType: UserDTO.Email
- uid: WAMServer.DTO.UserDTO.Email*
  name: Email
  href: api/WAMServer.DTO.UserDTO.html#WAMServer_DTO_UserDTO_Email_
  commentId: Overload:WAMServer.DTO.UserDTO.Email
  isSpec: "True"
  fullName: WAMServer.DTO.UserDTO.Email
  nameWithType: UserDTO.Email
- uid: WAMServer.DTO.UserDTO.FirstName
  name: FirstName
  href: api/WAMServer.DTO.UserDTO.html#WAMServer_DTO_UserDTO_FirstName
  commentId: P:WAMServer.DTO.UserDTO.FirstName
  fullName: WAMServer.DTO.UserDTO.FirstName
  nameWithType: UserDTO.FirstName
- uid: WAMServer.DTO.UserDTO.FirstName*
  name: FirstName
  href: api/WAMServer.DTO.UserDTO.html#WAMServer_DTO_UserDTO_FirstName_
  commentId: Overload:WAMServer.DTO.UserDTO.FirstName
  isSpec: "True"
  fullName: WAMServer.DTO.UserDTO.FirstName
  nameWithType: UserDTO.FirstName
- uid: WAMServer.DTO.UserDTO.Id
  name: Id
  href: api/WAMServer.DTO.UserDTO.html#WAMServer_DTO_UserDTO_Id
  commentId: P:WAMServer.DTO.UserDTO.Id
  fullName: WAMServer.DTO.UserDTO.Id
  nameWithType: UserDTO.Id
- uid: WAMServer.DTO.UserDTO.Id*
  name: Id
  href: api/WAMServer.DTO.UserDTO.html#WAMServer_DTO_UserDTO_Id_
  commentId: Overload:WAMServer.DTO.UserDTO.Id
  isSpec: "True"
  fullName: WAMServer.DTO.UserDTO.Id
  nameWithType: UserDTO.Id
- uid: WAMServer.DTO.UserDTO.LastName
  name: LastName
  href: api/WAMServer.DTO.UserDTO.html#WAMServer_DTO_UserDTO_LastName
  commentId: P:WAMServer.DTO.UserDTO.LastName
  fullName: WAMServer.DTO.UserDTO.LastName
  nameWithType: UserDTO.LastName
- uid: WAMServer.DTO.UserDTO.LastName*
  name: LastName
  href: api/WAMServer.DTO.UserDTO.html#WAMServer_DTO_UserDTO_LastName_
  commentId: Overload:WAMServer.DTO.UserDTO.LastName
  isSpec: "True"
  fullName: WAMServer.DTO.UserDTO.LastName
  nameWithType: UserDTO.LastName
- uid: WAMServer.Interfaces
  name: WAMServer.Interfaces
  href: api/WAMServer.Interfaces.html
  commentId: N:WAMServer.Interfaces
  fullName: WAMServer.Interfaces
  nameWithType: WAMServer.Interfaces
- uid: WAMServer.Interfaces.IRepository`1
  name: IRepository<T>
  href: api/WAMServer.Interfaces.IRepository-1.html
  commentId: T:WAMServer.Interfaces.IRepository`1
  name.vb: IRepository(Of T)
  fullName: WAMServer.Interfaces.IRepository<T>
  fullName.vb: WAMServer.Interfaces.IRepository(Of T)
  nameWithType: IRepository<T>
  nameWithType.vb: IRepository(Of T)
- uid: WAMServer.Interfaces.IRepository`1.AddAsync(`0)
  name: AddAsync(T)
  href: api/WAMServer.Interfaces.IRepository-1.html#WAMServer_Interfaces_IRepository_1_AddAsync__0_
  commentId: M:WAMServer.Interfaces.IRepository`1.AddAsync(`0)
  fullName: WAMServer.Interfaces.IRepository<T>.AddAsync(T)
  fullName.vb: WAMServer.Interfaces.IRepository(Of T).AddAsync(T)
  nameWithType: IRepository<T>.AddAsync(T)
  nameWithType.vb: IRepository(Of T).AddAsync(T)
- uid: WAMServer.Interfaces.IRepository`1.AddAsync*
  name: AddAsync
  href: api/WAMServer.Interfaces.IRepository-1.html#WAMServer_Interfaces_IRepository_1_AddAsync_
  commentId: Overload:WAMServer.Interfaces.IRepository`1.AddAsync
  isSpec: "True"
  fullName: WAMServer.Interfaces.IRepository<T>.AddAsync
  fullName.vb: WAMServer.Interfaces.IRepository(Of T).AddAsync
  nameWithType: IRepository<T>.AddAsync
  nameWithType.vb: IRepository(Of T).AddAsync
- uid: WAMServer.Interfaces.IRepository`1.DeleteAsync(System.Guid)
  name: DeleteAsync(Guid)
  href: api/WAMServer.Interfaces.IRepository-1.html#WAMServer_Interfaces_IRepository_1_DeleteAsync_System_Guid_
  commentId: M:WAMServer.Interfaces.IRepository`1.DeleteAsync(System.Guid)
  fullName: WAMServer.Interfaces.IRepository<T>.DeleteAsync(System.Guid)
  fullName.vb: WAMServer.Interfaces.IRepository(Of T).DeleteAsync(System.Guid)
  nameWithType: IRepository<T>.DeleteAsync(Guid)
  nameWithType.vb: IRepository(Of T).DeleteAsync(Guid)
- uid: WAMServer.Interfaces.IRepository`1.DeleteAsync*
  name: DeleteAsync
  href: api/WAMServer.Interfaces.IRepository-1.html#WAMServer_Interfaces_IRepository_1_DeleteAsync_
  commentId: Overload:WAMServer.Interfaces.IRepository`1.DeleteAsync
  isSpec: "True"
  fullName: WAMServer.Interfaces.IRepository<T>.DeleteAsync
  fullName.vb: WAMServer.Interfaces.IRepository(Of T).DeleteAsync
  nameWithType: IRepository<T>.DeleteAsync
  nameWithType.vb: IRepository(Of T).DeleteAsync
- uid: WAMServer.Interfaces.IRepository`1.Get(System.Guid)
  name: Get(Guid)
  href: api/WAMServer.Interfaces.IRepository-1.html#WAMServer_Interfaces_IRepository_1_Get_System_Guid_
  commentId: M:WAMServer.Interfaces.IRepository`1.Get(System.Guid)
  fullName: WAMServer.Interfaces.IRepository<T>.Get(System.Guid)
  fullName.vb: WAMServer.Interfaces.IRepository(Of T).Get(System.Guid)
  nameWithType: IRepository<T>.Get(Guid)
  nameWithType.vb: IRepository(Of T).Get(Guid)
- uid: WAMServer.Interfaces.IRepository`1.Get*
  name: Get
  href: api/WAMServer.Interfaces.IRepository-1.html#WAMServer_Interfaces_IRepository_1_Get_
  commentId: Overload:WAMServer.Interfaces.IRepository`1.Get
  isSpec: "True"
  fullName: WAMServer.Interfaces.IRepository<T>.Get
  fullName.vb: WAMServer.Interfaces.IRepository(Of T).Get
  nameWithType: IRepository<T>.Get
  nameWithType.vb: IRepository(Of T).Get
- uid: WAMServer.Interfaces.IRepository`1.GetAllAsync
  name: GetAllAsync()
  href: api/WAMServer.Interfaces.IRepository-1.html#WAMServer_Interfaces_IRepository_1_GetAllAsync
  commentId: M:WAMServer.Interfaces.IRepository`1.GetAllAsync
  fullName: WAMServer.Interfaces.IRepository<T>.GetAllAsync()
  fullName.vb: WAMServer.Interfaces.IRepository(Of T).GetAllAsync()
  nameWithType: IRepository<T>.GetAllAsync()
  nameWithType.vb: IRepository(Of T).GetAllAsync()
- uid: WAMServer.Interfaces.IRepository`1.GetAllAsync*
  name: GetAllAsync
  href: api/WAMServer.Interfaces.IRepository-1.html#WAMServer_Interfaces_IRepository_1_GetAllAsync_
  commentId: Overload:WAMServer.Interfaces.IRepository`1.GetAllAsync
  isSpec: "True"
  fullName: WAMServer.Interfaces.IRepository<T>.GetAllAsync
  fullName.vb: WAMServer.Interfaces.IRepository(Of T).GetAllAsync
  nameWithType: IRepository<T>.GetAllAsync
  nameWithType.vb: IRepository(Of T).GetAllAsync
- uid: WAMServer.Interfaces.IRepository`1.UpdateAsync(`0)
  name: UpdateAsync(T)
  href: api/WAMServer.Interfaces.IRepository-1.html#WAMServer_Interfaces_IRepository_1_UpdateAsync__0_
  commentId: M:WAMServer.Interfaces.IRepository`1.UpdateAsync(`0)
  fullName: WAMServer.Interfaces.IRepository<T>.UpdateAsync(T)
  fullName.vb: WAMServer.Interfaces.IRepository(Of T).UpdateAsync(T)
  nameWithType: IRepository<T>.UpdateAsync(T)
  nameWithType.vb: IRepository(Of T).UpdateAsync(T)
- uid: WAMServer.Interfaces.IRepository`1.UpdateAsync*
  name: UpdateAsync
  href: api/WAMServer.Interfaces.IRepository-1.html#WAMServer_Interfaces_IRepository_1_UpdateAsync_
  commentId: Overload:WAMServer.Interfaces.IRepository`1.UpdateAsync
  isSpec: "True"
  fullName: WAMServer.Interfaces.IRepository<T>.UpdateAsync
  fullName.vb: WAMServer.Interfaces.IRepository(Of T).UpdateAsync
  nameWithType: IRepository<T>.UpdateAsync
  nameWithType.vb: IRepository(Of T).UpdateAsync
- uid: WAMServer.Interfaces.IUserRepository
  name: IUserRepository
  href: api/WAMServer.Interfaces.IUserRepository.html
  commentId: T:WAMServer.Interfaces.IUserRepository
  fullName: WAMServer.Interfaces.IUserRepository
  nameWithType: IUserRepository
- uid: WAMServer.Interfaces.IUserRepository.AddUserAsync(WAMServer.Models.User)
  name: AddUserAsync(User)
  href: api/WAMServer.Interfaces.IUserRepository.html#WAMServer_Interfaces_IUserRepository_AddUserAsync_WAMServer_Models_User_
  commentId: M:WAMServer.Interfaces.IUserRepository.AddUserAsync(WAMServer.Models.User)
  fullName: WAMServer.Interfaces.IUserRepository.AddUserAsync(WAMServer.Models.User)
  nameWithType: IUserRepository.AddUserAsync(User)
- uid: WAMServer.Interfaces.IUserRepository.AddUserAsync*
  name: AddUserAsync
  href: api/WAMServer.Interfaces.IUserRepository.html#WAMServer_Interfaces_IUserRepository_AddUserAsync_
  commentId: Overload:WAMServer.Interfaces.IUserRepository.AddUserAsync
  isSpec: "True"
  fullName: WAMServer.Interfaces.IUserRepository.AddUserAsync
  nameWithType: IUserRepository.AddUserAsync
- uid: WAMServer.Interfaces.IUserRepository.DeleteUserAsync(System.Int32)
  name: DeleteUserAsync(int)
  href: api/WAMServer.Interfaces.IUserRepository.html#WAMServer_Interfaces_IUserRepository_DeleteUserAsync_System_Int32_
  commentId: M:WAMServer.Interfaces.IUserRepository.DeleteUserAsync(System.Int32)
  name.vb: DeleteUserAsync(Integer)
  fullName: WAMServer.Interfaces.IUserRepository.DeleteUserAsync(int)
  fullName.vb: WAMServer.Interfaces.IUserRepository.DeleteUserAsync(Integer)
  nameWithType: IUserRepository.DeleteUserAsync(int)
  nameWithType.vb: IUserRepository.DeleteUserAsync(Integer)
- uid: WAMServer.Interfaces.IUserRepository.DeleteUserAsync*
  name: DeleteUserAsync
  href: api/WAMServer.Interfaces.IUserRepository.html#WAMServer_Interfaces_IUserRepository_DeleteUserAsync_
  commentId: Overload:WAMServer.Interfaces.IUserRepository.DeleteUserAsync
  isSpec: "True"
  fullName: WAMServer.Interfaces.IUserRepository.DeleteUserAsync
  nameWithType: IUserRepository.DeleteUserAsync
- uid: WAMServer.Interfaces.IUserRepository.GetUser(System.Guid)
  name: GetUser(Guid)
  href: api/WAMServer.Interfaces.IUserRepository.html#WAMServer_Interfaces_IUserRepository_GetUser_System_Guid_
  commentId: M:WAMServer.Interfaces.IUserRepository.GetUser(System.Guid)
  fullName: WAMServer.Interfaces.IUserRepository.GetUser(System.Guid)
  nameWithType: IUserRepository.GetUser(Guid)
- uid: WAMServer.Interfaces.IUserRepository.GetUser(System.String)
  name: GetUser(string)
  href: api/WAMServer.Interfaces.IUserRepository.html#WAMServer_Interfaces_IUserRepository_GetUser_System_String_
  commentId: M:WAMServer.Interfaces.IUserRepository.GetUser(System.String)
  name.vb: GetUser(String)
  fullName: WAMServer.Interfaces.IUserRepository.GetUser(string)
  fullName.vb: WAMServer.Interfaces.IUserRepository.GetUser(String)
  nameWithType: IUserRepository.GetUser(string)
  nameWithType.vb: IUserRepository.GetUser(String)
- uid: WAMServer.Interfaces.IUserRepository.GetUser*
  name: GetUser
  href: api/WAMServer.Interfaces.IUserRepository.html#WAMServer_Interfaces_IUserRepository_GetUser_
  commentId: Overload:WAMServer.Interfaces.IUserRepository.GetUser
  isSpec: "True"
  fullName: WAMServer.Interfaces.IUserRepository.GetUser
  nameWithType: IUserRepository.GetUser
- uid: WAMServer.Interfaces.IUserRepository.GetUserIncludingAddress(WAMServer.Models.User)
  name: GetUserIncludingAddress(User?)
  href: api/WAMServer.Interfaces.IUserRepository.html#WAMServer_Interfaces_IUserRepository_GetUserIncludingAddress_WAMServer_Models_User_
  commentId: M:WAMServer.Interfaces.IUserRepository.GetUserIncludingAddress(WAMServer.Models.User)
  name.vb: GetUserIncludingAddress(User)
  fullName: WAMServer.Interfaces.IUserRepository.GetUserIncludingAddress(WAMServer.Models.User?)
  fullName.vb: WAMServer.Interfaces.IUserRepository.GetUserIncludingAddress(WAMServer.Models.User)
  nameWithType: IUserRepository.GetUserIncludingAddress(User?)
  nameWithType.vb: IUserRepository.GetUserIncludingAddress(User)
- uid: WAMServer.Interfaces.IUserRepository.GetUserIncludingAddress*
  name: GetUserIncludingAddress
  href: api/WAMServer.Interfaces.IUserRepository.html#WAMServer_Interfaces_IUserRepository_GetUserIncludingAddress_
  commentId: Overload:WAMServer.Interfaces.IUserRepository.GetUserIncludingAddress
  isSpec: "True"
  fullName: WAMServer.Interfaces.IUserRepository.GetUserIncludingAddress
  nameWithType: IUserRepository.GetUserIncludingAddress
- uid: WAMServer.Interfaces.IUserRepository.GetUsersAsync
  name: GetUsersAsync()
  href: api/WAMServer.Interfaces.IUserRepository.html#WAMServer_Interfaces_IUserRepository_GetUsersAsync
  commentId: M:WAMServer.Interfaces.IUserRepository.GetUsersAsync
  fullName: WAMServer.Interfaces.IUserRepository.GetUsersAsync()
  nameWithType: IUserRepository.GetUsersAsync()
- uid: WAMServer.Interfaces.IUserRepository.GetUsersAsync*
  name: GetUsersAsync
  href: api/WAMServer.Interfaces.IUserRepository.html#WAMServer_Interfaces_IUserRepository_GetUsersAsync_
  commentId: Overload:WAMServer.Interfaces.IUserRepository.GetUsersAsync
  isSpec: "True"
  fullName: WAMServer.Interfaces.IUserRepository.GetUsersAsync
  nameWithType: IUserRepository.GetUsersAsync
- uid: WAMServer.Interfaces.IUserRepository.UpdateUserAsync(WAMServer.Models.User)
  name: UpdateUserAsync(User)
  href: api/WAMServer.Interfaces.IUserRepository.html#WAMServer_Interfaces_IUserRepository_UpdateUserAsync_WAMServer_Models_User_
  commentId: M:WAMServer.Interfaces.IUserRepository.UpdateUserAsync(WAMServer.Models.User)
  fullName: WAMServer.Interfaces.IUserRepository.UpdateUserAsync(WAMServer.Models.User)
  nameWithType: IUserRepository.UpdateUserAsync(User)
- uid: WAMServer.Interfaces.IUserRepository.UpdateUserAsync*
  name: UpdateUserAsync
  href: api/WAMServer.Interfaces.IUserRepository.html#WAMServer_Interfaces_IUserRepository_UpdateUserAsync_
  commentId: Overload:WAMServer.Interfaces.IUserRepository.UpdateUserAsync
  isSpec: "True"
  fullName: WAMServer.Interfaces.IUserRepository.UpdateUserAsync
  nameWithType: IUserRepository.UpdateUserAsync
- uid: WAMServer.Models
  name: WAMServer.Models
  href: api/WAMServer.Models.html
  commentId: N:WAMServer.Models
  fullName: WAMServer.Models
  nameWithType: WAMServer.Models
- uid: WAMServer.Models.Address
  name: Address
  href: api/WAMServer.Models.Address.html
  commentId: T:WAMServer.Models.Address
  fullName: WAMServer.Models.Address
  nameWithType: Address
- uid: WAMServer.Models.Address.City
  name: City
  href: api/WAMServer.Models.Address.html#WAMServer_Models_Address_City
  commentId: P:WAMServer.Models.Address.City
  fullName: WAMServer.Models.Address.City
  nameWithType: Address.City
- uid: WAMServer.Models.Address.City*
  name: City
  href: api/WAMServer.Models.Address.html#WAMServer_Models_Address_City_
  commentId: Overload:WAMServer.Models.Address.City
  isSpec: "True"
  fullName: WAMServer.Models.Address.City
  nameWithType: Address.City
- uid: WAMServer.Models.Address.Id
  name: Id
  href: api/WAMServer.Models.Address.html#WAMServer_Models_Address_Id
  commentId: P:WAMServer.Models.Address.Id
  fullName: WAMServer.Models.Address.Id
  nameWithType: Address.Id
- uid: WAMServer.Models.Address.Id*
  name: Id
  href: api/WAMServer.Models.Address.html#WAMServer_Models_Address_Id_
  commentId: Overload:WAMServer.Models.Address.Id
  isSpec: "True"
  fullName: WAMServer.Models.Address.Id
  nameWithType: Address.Id
- uid: WAMServer.Models.Address.Street
  name: Street
  href: api/WAMServer.Models.Address.html#WAMServer_Models_Address_Street
  commentId: P:WAMServer.Models.Address.Street
  fullName: WAMServer.Models.Address.Street
  nameWithType: Address.Street
- uid: WAMServer.Models.Address.Street*
  name: Street
  href: api/WAMServer.Models.Address.html#WAMServer_Models_Address_Street_
  commentId: Overload:WAMServer.Models.Address.Street
  isSpec: "True"
  fullName: WAMServer.Models.Address.Street
  nameWithType: Address.Street
- uid: WAMServer.Models.Address.User
  name: User
  href: api/WAMServer.Models.Address.html#WAMServer_Models_Address_User
  commentId: P:WAMServer.Models.Address.User
  fullName: WAMServer.Models.Address.User
  nameWithType: Address.User
- uid: WAMServer.Models.Address.User*
  name: User
  href: api/WAMServer.Models.Address.html#WAMServer_Models_Address_User_
  commentId: Overload:WAMServer.Models.Address.User
  isSpec: "True"
  fullName: WAMServer.Models.Address.User
  nameWithType: Address.User
- uid: WAMServer.Models.Address.UserId
  name: UserId
  href: api/WAMServer.Models.Address.html#WAMServer_Models_Address_UserId
  commentId: P:WAMServer.Models.Address.UserId
  fullName: WAMServer.Models.Address.UserId
  nameWithType: Address.UserId
- uid: WAMServer.Models.Address.UserId*
  name: UserId
  href: api/WAMServer.Models.Address.html#WAMServer_Models_Address_UserId_
  commentId: Overload:WAMServer.Models.Address.UserId
  isSpec: "True"
  fullName: WAMServer.Models.Address.UserId
  nameWithType: Address.UserId
- uid: WAMServer.Models.Address.Zip
  name: Zip
  href: api/WAMServer.Models.Address.html#WAMServer_Models_Address_Zip
  commentId: P:WAMServer.Models.Address.Zip
  fullName: WAMServer.Models.Address.Zip
  nameWithType: Address.Zip
- uid: WAMServer.Models.Address.Zip*
  name: Zip
  href: api/WAMServer.Models.Address.html#WAMServer_Models_Address_Zip_
  commentId: Overload:WAMServer.Models.Address.Zip
  isSpec: "True"
  fullName: WAMServer.Models.Address.Zip
  nameWithType: Address.Zip
- uid: WAMServer.Models.User
  name: User
  href: api/WAMServer.Models.User.html
  commentId: T:WAMServer.Models.User
  fullName: WAMServer.Models.User
  nameWithType: User
- uid: WAMServer.Models.User.#ctor(System.String,System.String,System.String,System.String)
  name: User(string, string, string, string)
  href: api/WAMServer.Models.User.html#WAMServer_Models_User__ctor_System_String_System_String_System_String_System_String_
  commentId: M:WAMServer.Models.User.#ctor(System.String,System.String,System.String,System.String)
  name.vb: New(String, String, String, String)
  fullName: WAMServer.Models.User.User(string, string, string, string)
  fullName.vb: WAMServer.Models.User.New(String, String, String, String)
  nameWithType: User.User(string, string, string, string)
  nameWithType.vb: User.New(String, String, String, String)
- uid: WAMServer.Models.User.#ctor*
  name: User
  href: api/WAMServer.Models.User.html#WAMServer_Models_User__ctor_
  commentId: Overload:WAMServer.Models.User.#ctor
  isSpec: "True"
  name.vb: New
  fullName: WAMServer.Models.User.User
  fullName.vb: WAMServer.Models.User.New
  nameWithType: User.User
  nameWithType.vb: User.New
- uid: WAMServer.Models.User.Address
  name: Address
  href: api/WAMServer.Models.User.html#WAMServer_Models_User_Address
  commentId: P:WAMServer.Models.User.Address
  fullName: WAMServer.Models.User.Address
  nameWithType: User.Address
- uid: WAMServer.Models.User.Address*
  name: Address
  href: api/WAMServer.Models.User.html#WAMServer_Models_User_Address_
  commentId: Overload:WAMServer.Models.User.Address
  isSpec: "True"
  fullName: WAMServer.Models.User.Address
  nameWithType: User.Address
- uid: WAMServer.Models.User.AddressId
  name: AddressId
  href: api/WAMServer.Models.User.html#WAMServer_Models_User_AddressId
  commentId: P:WAMServer.Models.User.AddressId
  fullName: WAMServer.Models.User.AddressId
  nameWithType: User.AddressId
- uid: WAMServer.Models.User.AddressId*
  name: AddressId
  href: api/WAMServer.Models.User.html#WAMServer_Models_User_AddressId_
  commentId: Overload:WAMServer.Models.User.AddressId
  isSpec: "True"
  fullName: WAMServer.Models.User.AddressId
  nameWithType: User.AddressId
- uid: WAMServer.Models.User.Email
  name: Email
  href: api/WAMServer.Models.User.html#WAMServer_Models_User_Email
  commentId: P:WAMServer.Models.User.Email
  fullName: WAMServer.Models.User.Email
  nameWithType: User.Email
- uid: WAMServer.Models.User.Email*
  name: Email
  href: api/WAMServer.Models.User.html#WAMServer_Models_User_Email_
  commentId: Overload:WAMServer.Models.User.Email
  isSpec: "True"
  fullName: WAMServer.Models.User.Email
  nameWithType: User.Email
- uid: WAMServer.Models.User.FirstName
  name: FirstName
  href: api/WAMServer.Models.User.html#WAMServer_Models_User_FirstName
  commentId: P:WAMServer.Models.User.FirstName
  fullName: WAMServer.Models.User.FirstName
  nameWithType: User.FirstName
- uid: WAMServer.Models.User.FirstName*
  name: FirstName
  href: api/WAMServer.Models.User.html#WAMServer_Models_User_FirstName_
  commentId: Overload:WAMServer.Models.User.FirstName
  isSpec: "True"
  fullName: WAMServer.Models.User.FirstName
  nameWithType: User.FirstName
- uid: WAMServer.Models.User.Id
  name: Id
  href: api/WAMServer.Models.User.html#WAMServer_Models_User_Id
  commentId: P:WAMServer.Models.User.Id
  fullName: WAMServer.Models.User.Id
  nameWithType: User.Id
- uid: WAMServer.Models.User.Id*
  name: Id
  href: api/WAMServer.Models.User.html#WAMServer_Models_User_Id_
  commentId: Overload:WAMServer.Models.User.Id
  isSpec: "True"
  fullName: WAMServer.Models.User.Id
  nameWithType: User.Id
- uid: WAMServer.Models.User.LastName
  name: LastName
  href: api/WAMServer.Models.User.html#WAMServer_Models_User_LastName
  commentId: P:WAMServer.Models.User.LastName
  fullName: WAMServer.Models.User.LastName
  nameWithType: User.LastName
- uid: WAMServer.Models.User.LastName*
  name: LastName
  href: api/WAMServer.Models.User.html#WAMServer_Models_User_LastName_
  commentId: Overload:WAMServer.Models.User.LastName
  isSpec: "True"
  fullName: WAMServer.Models.User.LastName
  nameWithType: User.LastName
- uid: WAMServer.Models.User.Password
  name: Password
  href: api/WAMServer.Models.User.html#WAMServer_Models_User_Password
  commentId: P:WAMServer.Models.User.Password
  fullName: WAMServer.Models.User.Password
  nameWithType: User.Password
- uid: WAMServer.Models.User.Password*
  name: Password
  href: api/WAMServer.Models.User.html#WAMServer_Models_User_Password_
  commentId: Overload:WAMServer.Models.User.Password
  isSpec: "True"
  fullName: WAMServer.Models.User.Password
  nameWithType: User.Password
- uid: WAMServer.Models.WamDBContext
  name: WamDBContext
  href: api/WAMServer.Models.WamDBContext.html
  commentId: T:WAMServer.Models.WamDBContext
  fullName: WAMServer.Models.WamDBContext
  nameWithType: WamDBContext
- uid: WAMServer.Models.WamDBContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{WAMServer.Models.WamDBContext})
  name: WamDBContext(DbContextOptions<WamDBContext>)
  href: api/WAMServer.Models.WamDBContext.html#WAMServer_Models_WamDBContext__ctor_Microsoft_EntityFrameworkCore_DbContextOptions_WAMServer_Models_WamDBContext__
  commentId: M:WAMServer.Models.WamDBContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{WAMServer.Models.WamDBContext})
  name.vb: New(DbContextOptions(Of WamDBContext))
  fullName: WAMServer.Models.WamDBContext.WamDBContext(Microsoft.EntityFrameworkCore.DbContextOptions<WAMServer.Models.WamDBContext>)
  fullName.vb: WAMServer.Models.WamDBContext.New(Microsoft.EntityFrameworkCore.DbContextOptions(Of WAMServer.Models.WamDBContext))
  nameWithType: WamDBContext.WamDBContext(DbContextOptions<WamDBContext>)
  nameWithType.vb: WamDBContext.New(DbContextOptions(Of WamDBContext))
- uid: WAMServer.Models.WamDBContext.#ctor*
  name: WamDBContext
  href: api/WAMServer.Models.WamDBContext.html#WAMServer_Models_WamDBContext__ctor_
  commentId: Overload:WAMServer.Models.WamDBContext.#ctor
  isSpec: "True"
  name.vb: New
  fullName: WAMServer.Models.WamDBContext.WamDBContext
  fullName.vb: WAMServer.Models.WamDBContext.New
  nameWithType: WamDBContext.WamDBContext
  nameWithType.vb: WamDBContext.New
- uid: WAMServer.Models.WamDBContext.Addresses
  name: Addresses
  href: api/WAMServer.Models.WamDBContext.html#WAMServer_Models_WamDBContext_Addresses
  commentId: P:WAMServer.Models.WamDBContext.Addresses
  fullName: WAMServer.Models.WamDBContext.Addresses
  nameWithType: WamDBContext.Addresses
- uid: WAMServer.Models.WamDBContext.Addresses*
  name: Addresses
  href: api/WAMServer.Models.WamDBContext.html#WAMServer_Models_WamDBContext_Addresses_
  commentId: Overload:WAMServer.Models.WamDBContext.Addresses
  isSpec: "True"
  fullName: WAMServer.Models.WamDBContext.Addresses
  nameWithType: WamDBContext.Addresses
- uid: WAMServer.Models.WamDBContext.Users
  name: Users
  href: api/WAMServer.Models.WamDBContext.html#WAMServer_Models_WamDBContext_Users
  commentId: P:WAMServer.Models.WamDBContext.Users
  fullName: WAMServer.Models.WamDBContext.Users
  nameWithType: WamDBContext.Users
- uid: WAMServer.Models.WamDBContext.Users*
  name: Users
  href: api/WAMServer.Models.WamDBContext.html#WAMServer_Models_WamDBContext_Users_
  commentId: Overload:WAMServer.Models.WamDBContext.Users
  isSpec: "True"
  fullName: WAMServer.Models.WamDBContext.Users
  nameWithType: WamDBContext.Users
- uid: WAMServer.Records
  name: WAMServer.Records
  href: api/WAMServer.Records.html
  commentId: N:WAMServer.Records
  fullName: WAMServer.Records
  nameWithType: WAMServer.Records
- uid: WAMServer.Records.LoginBody
  name: LoginBody
  href: api/WAMServer.Records.LoginBody.html
  commentId: T:WAMServer.Records.LoginBody
  fullName: WAMServer.Records.LoginBody
  nameWithType: LoginBody
- uid: WAMServer.Records.LoginBody.#ctor(System.String,System.String)
  name: LoginBody(string, string)
  href: api/WAMServer.Records.LoginBody.html#WAMServer_Records_LoginBody__ctor_System_String_System_String_
  commentId: M:WAMServer.Records.LoginBody.#ctor(System.String,System.String)
  name.vb: New(String, String)
  fullName: WAMServer.Records.LoginBody.LoginBody(string, string)
  fullName.vb: WAMServer.Records.LoginBody.New(String, String)
  nameWithType: LoginBody.LoginBody(string, string)
  nameWithType.vb: LoginBody.New(String, String)
- uid: WAMServer.Records.LoginBody.#ctor*
  name: LoginBody
  href: api/WAMServer.Records.LoginBody.html#WAMServer_Records_LoginBody__ctor_
  commentId: Overload:WAMServer.Records.LoginBody.#ctor
  isSpec: "True"
  name.vb: New
  fullName: WAMServer.Records.LoginBody.LoginBody
  fullName.vb: WAMServer.Records.LoginBody.New
  nameWithType: LoginBody.LoginBody
  nameWithType.vb: LoginBody.New
- uid: WAMServer.Records.LoginBody.Email
  name: Email
  href: api/WAMServer.Records.LoginBody.html#WAMServer_Records_LoginBody_Email
  commentId: P:WAMServer.Records.LoginBody.Email
  fullName: WAMServer.Records.LoginBody.Email
  nameWithType: LoginBody.Email
- uid: WAMServer.Records.LoginBody.Email*
  name: Email
  href: api/WAMServer.Records.LoginBody.html#WAMServer_Records_LoginBody_Email_
  commentId: Overload:WAMServer.Records.LoginBody.Email
  isSpec: "True"
  fullName: WAMServer.Records.LoginBody.Email
  nameWithType: LoginBody.Email
- uid: WAMServer.Records.LoginBody.Password
  name: Password
  href: api/WAMServer.Records.LoginBody.html#WAMServer_Records_LoginBody_Password
  commentId: P:WAMServer.Records.LoginBody.Password
  fullName: WAMServer.Records.LoginBody.Password
  nameWithType: LoginBody.Password
- uid: WAMServer.Records.LoginBody.Password*
  name: Password
  href: api/WAMServer.Records.LoginBody.html#WAMServer_Records_LoginBody_Password_
  commentId: Overload:WAMServer.Records.LoginBody.Password
  isSpec: "True"
  fullName: WAMServer.Records.LoginBody.Password
  nameWithType: LoginBody.Password
- uid: WAMServer.Repositories
  name: WAMServer.Repositories
  href: api/WAMServer.Repositories.html
  commentId: N:WAMServer.Repositories
  fullName: WAMServer.Repositories
  nameWithType: WAMServer.Repositories
- uid: WAMServer.Repositories.DbAddressRepository
  name: DbAddressRepository
  href: api/WAMServer.Repositories.DbAddressRepository.html
  commentId: T:WAMServer.Repositories.DbAddressRepository
  fullName: WAMServer.Repositories.DbAddressRepository
  nameWithType: DbAddressRepository
- uid: WAMServer.Repositories.DbAddressRepository.#ctor(WAMServer.Models.WamDBContext)
  name: DbAddressRepository(WamDBContext)
  href: api/WAMServer.Repositories.DbAddressRepository.html#WAMServer_Repositories_DbAddressRepository__ctor_WAMServer_Models_WamDBContext_
  commentId: M:WAMServer.Repositories.DbAddressRepository.#ctor(WAMServer.Models.WamDBContext)
  name.vb: New(WamDBContext)
  fullName: WAMServer.Repositories.DbAddressRepository.DbAddressRepository(WAMServer.Models.WamDBContext)
  fullName.vb: WAMServer.Repositories.DbAddressRepository.New(WAMServer.Models.WamDBContext)
  nameWithType: DbAddressRepository.DbAddressRepository(WamDBContext)
  nameWithType.vb: DbAddressRepository.New(WamDBContext)
- uid: WAMServer.Repositories.DbAddressRepository.#ctor*
  name: DbAddressRepository
  href: api/WAMServer.Repositories.DbAddressRepository.html#WAMServer_Repositories_DbAddressRepository__ctor_
  commentId: Overload:WAMServer.Repositories.DbAddressRepository.#ctor
  isSpec: "True"
  name.vb: New
  fullName: WAMServer.Repositories.DbAddressRepository.DbAddressRepository
  fullName.vb: WAMServer.Repositories.DbAddressRepository.New
  nameWithType: DbAddressRepository.DbAddressRepository
  nameWithType.vb: DbAddressRepository.New
- uid: WAMServer.Repositories.DbAddressRepository.AddAsync(WAMServer.Models.Address)
  name: AddAsync(Address)
  href: api/WAMServer.Repositories.DbAddressRepository.html#WAMServer_Repositories_DbAddressRepository_AddAsync_WAMServer_Models_Address_
  commentId: M:WAMServer.Repositories.DbAddressRepository.AddAsync(WAMServer.Models.Address)
  fullName: WAMServer.Repositories.DbAddressRepository.AddAsync(WAMServer.Models.Address)
  nameWithType: DbAddressRepository.AddAsync(Address)
- uid: WAMServer.Repositories.DbAddressRepository.AddAsync*
  name: AddAsync
  href: api/WAMServer.Repositories.DbAddressRepository.html#WAMServer_Repositories_DbAddressRepository_AddAsync_
  commentId: Overload:WAMServer.Repositories.DbAddressRepository.AddAsync
  isSpec: "True"
  fullName: WAMServer.Repositories.DbAddressRepository.AddAsync
  nameWithType: DbAddressRepository.AddAsync
- uid: WAMServer.Repositories.DbAddressRepository.DeleteAsync(System.Guid)
  name: DeleteAsync(Guid)
  href: api/WAMServer.Repositories.DbAddressRepository.html#WAMServer_Repositories_DbAddressRepository_DeleteAsync_System_Guid_
  commentId: M:WAMServer.Repositories.DbAddressRepository.DeleteAsync(System.Guid)
  fullName: WAMServer.Repositories.DbAddressRepository.DeleteAsync(System.Guid)
  nameWithType: DbAddressRepository.DeleteAsync(Guid)
- uid: WAMServer.Repositories.DbAddressRepository.DeleteAsync*
  name: DeleteAsync
  href: api/WAMServer.Repositories.DbAddressRepository.html#WAMServer_Repositories_DbAddressRepository_DeleteAsync_
  commentId: Overload:WAMServer.Repositories.DbAddressRepository.DeleteAsync
  isSpec: "True"
  fullName: WAMServer.Repositories.DbAddressRepository.DeleteAsync
  nameWithType: DbAddressRepository.DeleteAsync
- uid: WAMServer.Repositories.DbAddressRepository.Get(System.Guid)
  name: Get(Guid)
  href: api/WAMServer.Repositories.DbAddressRepository.html#WAMServer_Repositories_DbAddressRepository_Get_System_Guid_
  commentId: M:WAMServer.Repositories.DbAddressRepository.Get(System.Guid)
  fullName: WAMServer.Repositories.DbAddressRepository.Get(System.Guid)
  nameWithType: DbAddressRepository.Get(Guid)
- uid: WAMServer.Repositories.DbAddressRepository.Get*
  name: Get
  href: api/WAMServer.Repositories.DbAddressRepository.html#WAMServer_Repositories_DbAddressRepository_Get_
  commentId: Overload:WAMServer.Repositories.DbAddressRepository.Get
  isSpec: "True"
  fullName: WAMServer.Repositories.DbAddressRepository.Get
  nameWithType: DbAddressRepository.Get
- uid: WAMServer.Repositories.DbAddressRepository.GetAllAsync
  name: GetAllAsync()
  href: api/WAMServer.Repositories.DbAddressRepository.html#WAMServer_Repositories_DbAddressRepository_GetAllAsync
  commentId: M:WAMServer.Repositories.DbAddressRepository.GetAllAsync
  fullName: WAMServer.Repositories.DbAddressRepository.GetAllAsync()
  nameWithType: DbAddressRepository.GetAllAsync()
- uid: WAMServer.Repositories.DbAddressRepository.GetAllAsync*
  name: GetAllAsync
  href: api/WAMServer.Repositories.DbAddressRepository.html#WAMServer_Repositories_DbAddressRepository_GetAllAsync_
  commentId: Overload:WAMServer.Repositories.DbAddressRepository.GetAllAsync
  isSpec: "True"
  fullName: WAMServer.Repositories.DbAddressRepository.GetAllAsync
  nameWithType: DbAddressRepository.GetAllAsync
- uid: WAMServer.Repositories.DbAddressRepository.UpdateAsync(WAMServer.Models.Address)
  name: UpdateAsync(Address)
  href: api/WAMServer.Repositories.DbAddressRepository.html#WAMServer_Repositories_DbAddressRepository_UpdateAsync_WAMServer_Models_Address_
  commentId: M:WAMServer.Repositories.DbAddressRepository.UpdateAsync(WAMServer.Models.Address)
  fullName: WAMServer.Repositories.DbAddressRepository.UpdateAsync(WAMServer.Models.Address)
  nameWithType: DbAddressRepository.UpdateAsync(Address)
- uid: WAMServer.Repositories.DbAddressRepository.UpdateAsync*
  name: UpdateAsync
  href: api/WAMServer.Repositories.DbAddressRepository.html#WAMServer_Repositories_DbAddressRepository_UpdateAsync_
  commentId: Overload:WAMServer.Repositories.DbAddressRepository.UpdateAsync
  isSpec: "True"
  fullName: WAMServer.Repositories.DbAddressRepository.UpdateAsync
  nameWithType: DbAddressRepository.UpdateAsync
- uid: WAMServer.Repositories.DbUserRepository
  name: DbUserRepository
  href: api/WAMServer.Repositories.DbUserRepository.html
  commentId: T:WAMServer.Repositories.DbUserRepository
  fullName: WAMServer.Repositories.DbUserRepository
  nameWithType: DbUserRepository
- uid: WAMServer.Repositories.DbUserRepository.#ctor(WAMServer.Models.WamDBContext)
  name: DbUserRepository(WamDBContext)
  href: api/WAMServer.Repositories.DbUserRepository.html#WAMServer_Repositories_DbUserRepository__ctor_WAMServer_Models_WamDBContext_
  commentId: M:WAMServer.Repositories.DbUserRepository.#ctor(WAMServer.Models.WamDBContext)
  name.vb: New(WamDBContext)
  fullName: WAMServer.Repositories.DbUserRepository.DbUserRepository(WAMServer.Models.WamDBContext)
  fullName.vb: WAMServer.Repositories.DbUserRepository.New(WAMServer.Models.WamDBContext)
  nameWithType: DbUserRepository.DbUserRepository(WamDBContext)
  nameWithType.vb: DbUserRepository.New(WamDBContext)
- uid: WAMServer.Repositories.DbUserRepository.#ctor*
  name: DbUserRepository
  href: api/WAMServer.Repositories.DbUserRepository.html#WAMServer_Repositories_DbUserRepository__ctor_
  commentId: Overload:WAMServer.Repositories.DbUserRepository.#ctor
  isSpec: "True"
  name.vb: New
  fullName: WAMServer.Repositories.DbUserRepository.DbUserRepository
  fullName.vb: WAMServer.Repositories.DbUserRepository.New
  nameWithType: DbUserRepository.DbUserRepository
  nameWithType.vb: DbUserRepository.New
- uid: WAMServer.Repositories.DbUserRepository.AddAsync(WAMServer.Models.User)
  name: AddAsync(User)
  href: api/WAMServer.Repositories.DbUserRepository.html#WAMServer_Repositories_DbUserRepository_AddAsync_WAMServer_Models_User_
  commentId: M:WAMServer.Repositories.DbUserRepository.AddAsync(WAMServer.Models.User)
  fullName: WAMServer.Repositories.DbUserRepository.AddAsync(WAMServer.Models.User)
  nameWithType: DbUserRepository.AddAsync(User)
- uid: WAMServer.Repositories.DbUserRepository.AddAsync*
  name: AddAsync
  href: api/WAMServer.Repositories.DbUserRepository.html#WAMServer_Repositories_DbUserRepository_AddAsync_
  commentId: Overload:WAMServer.Repositories.DbUserRepository.AddAsync
  isSpec: "True"
  fullName: WAMServer.Repositories.DbUserRepository.AddAsync
  nameWithType: DbUserRepository.AddAsync
- uid: WAMServer.Repositories.DbUserRepository.DeleteAsync(System.Guid)
  name: DeleteAsync(Guid)
  href: api/WAMServer.Repositories.DbUserRepository.html#WAMServer_Repositories_DbUserRepository_DeleteAsync_System_Guid_
  commentId: M:WAMServer.Repositories.DbUserRepository.DeleteAsync(System.Guid)
  fullName: WAMServer.Repositories.DbUserRepository.DeleteAsync(System.Guid)
  nameWithType: DbUserRepository.DeleteAsync(Guid)
- uid: WAMServer.Repositories.DbUserRepository.DeleteAsync*
  name: DeleteAsync
  href: api/WAMServer.Repositories.DbUserRepository.html#WAMServer_Repositories_DbUserRepository_DeleteAsync_
  commentId: Overload:WAMServer.Repositories.DbUserRepository.DeleteAsync
  isSpec: "True"
  fullName: WAMServer.Repositories.DbUserRepository.DeleteAsync
  nameWithType: DbUserRepository.DeleteAsync
- uid: WAMServer.Repositories.DbUserRepository.Get(System.Guid)
  name: Get(Guid)
  href: api/WAMServer.Repositories.DbUserRepository.html#WAMServer_Repositories_DbUserRepository_Get_System_Guid_
  commentId: M:WAMServer.Repositories.DbUserRepository.Get(System.Guid)
  fullName: WAMServer.Repositories.DbUserRepository.Get(System.Guid)
  nameWithType: DbUserRepository.Get(Guid)
- uid: WAMServer.Repositories.DbUserRepository.Get*
  name: Get
  href: api/WAMServer.Repositories.DbUserRepository.html#WAMServer_Repositories_DbUserRepository_Get_
  commentId: Overload:WAMServer.Repositories.DbUserRepository.Get
  isSpec: "True"
  fullName: WAMServer.Repositories.DbUserRepository.Get
  nameWithType: DbUserRepository.Get
- uid: WAMServer.Repositories.DbUserRepository.GetAllAsync
  name: GetAllAsync()
  href: api/WAMServer.Repositories.DbUserRepository.html#WAMServer_Repositories_DbUserRepository_GetAllAsync
  commentId: M:WAMServer.Repositories.DbUserRepository.GetAllAsync
  fullName: WAMServer.Repositories.DbUserRepository.GetAllAsync()
  nameWithType: DbUserRepository.GetAllAsync()
- uid: WAMServer.Repositories.DbUserRepository.GetAllAsync*
  name: GetAllAsync
  href: api/WAMServer.Repositories.DbUserRepository.html#WAMServer_Repositories_DbUserRepository_GetAllAsync_
  commentId: Overload:WAMServer.Repositories.DbUserRepository.GetAllAsync
  isSpec: "True"
  fullName: WAMServer.Repositories.DbUserRepository.GetAllAsync
  nameWithType: DbUserRepository.GetAllAsync
- uid: WAMServer.Repositories.DbUserRepository.UpdateAsync(WAMServer.Models.User)
  name: UpdateAsync(User)
  href: api/WAMServer.Repositories.DbUserRepository.html#WAMServer_Repositories_DbUserRepository_UpdateAsync_WAMServer_Models_User_
  commentId: M:WAMServer.Repositories.DbUserRepository.UpdateAsync(WAMServer.Models.User)
  fullName: WAMServer.Repositories.DbUserRepository.UpdateAsync(WAMServer.Models.User)
  nameWithType: DbUserRepository.UpdateAsync(User)
- uid: WAMServer.Repositories.DbUserRepository.UpdateAsync*
  name: UpdateAsync
  href: api/WAMServer.Repositories.DbUserRepository.html#WAMServer_Repositories_DbUserRepository_UpdateAsync_
  commentId: Overload:WAMServer.Repositories.DbUserRepository.UpdateAsync
  isSpec: "True"
  fullName: WAMServer.Repositories.DbUserRepository.UpdateAsync
  nameWithType: DbUserRepository.UpdateAsync
- uid: WAMServer.Startup
  name: Startup
  href: api/WAMServer.Startup.html
  commentId: T:WAMServer.Startup
  fullName: WAMServer.Startup
  nameWithType: Startup
- uid: WAMServer.Startup.Start
  name: Start()
  href: api/WAMServer.Startup.html#WAMServer_Startup_Start
  commentId: M:WAMServer.Startup.Start
  fullName: WAMServer.Startup.Start()
  nameWithType: Startup.Start()
- uid: WAMServer.Startup.Start*
  name: Start
  href: api/WAMServer.Startup.html#WAMServer_Startup_Start_
  commentId: Overload:WAMServer.Startup.Start
  isSpec: "True"
  fullName: WAMServer.Startup.Start
  nameWithType: Startup.Start
- uid: WAMServer.Tests.Controllers
  name: WAMServer.Tests.Controllers
  href: api/WAMServer.Tests.Controllers.html
  commentId: N:WAMServer.Tests.Controllers
  fullName: WAMServer.Tests.Controllers
  nameWithType: WAMServer.Tests.Controllers
- uid: WAMServer.Tests.Controllers.LoginControllerTests
  name: LoginControllerTests
  href: api/WAMServer.Tests.Controllers.LoginControllerTests.html
  commentId: T:WAMServer.Tests.Controllers.LoginControllerTests
  fullName: WAMServer.Tests.Controllers.LoginControllerTests
  nameWithType: LoginControllerTests
- uid: WAMServer.Tests.Controllers.LoginControllerTests.#ctor
  name: LoginControllerTests()
  href: api/WAMServer.Tests.Controllers.LoginControllerTests.html#WAMServer_Tests_Controllers_LoginControllerTests__ctor
  commentId: M:WAMServer.Tests.Controllers.LoginControllerTests.#ctor
  name.vb: New()
  fullName: WAMServer.Tests.Controllers.LoginControllerTests.LoginControllerTests()
  fullName.vb: WAMServer.Tests.Controllers.LoginControllerTests.New()
  nameWithType: LoginControllerTests.LoginControllerTests()
  nameWithType.vb: LoginControllerTests.New()
- uid: WAMServer.Tests.Controllers.LoginControllerTests.#ctor*
  name: LoginControllerTests
  href: api/WAMServer.Tests.Controllers.LoginControllerTests.html#WAMServer_Tests_Controllers_LoginControllerTests__ctor_
  commentId: Overload:WAMServer.Tests.Controllers.LoginControllerTests.#ctor
  isSpec: "True"
  name.vb: New
  fullName: WAMServer.Tests.Controllers.LoginControllerTests.LoginControllerTests
  fullName.vb: WAMServer.Tests.Controllers.LoginControllerTests.New
  nameWithType: LoginControllerTests.LoginControllerTests
  nameWithType.vb: LoginControllerTests.New
- uid: WAMServer.Tests.Controllers.LoginControllerTests.AuthenticateUserReturnNullIfUnableReturnsDesiredUser
  name: AuthenticateUserReturnNullIfUnableReturnsDesiredUser()
  href: api/WAMServer.Tests.Controllers.LoginControllerTests.html#WAMServer_Tests_Controllers_LoginControllerTests_AuthenticateUserReturnNullIfUnableReturnsDesiredUser
  commentId: M:WAMServer.Tests.Controllers.LoginControllerTests.AuthenticateUserReturnNullIfUnableReturnsDesiredUser
  fullName: WAMServer.Tests.Controllers.LoginControllerTests.AuthenticateUserReturnNullIfUnableReturnsDesiredUser()
  nameWithType: LoginControllerTests.AuthenticateUserReturnNullIfUnableReturnsDesiredUser()
- uid: WAMServer.Tests.Controllers.LoginControllerTests.AuthenticateUserReturnNullIfUnableReturnsDesiredUser*
  name: AuthenticateUserReturnNullIfUnableReturnsDesiredUser
  href: api/WAMServer.Tests.Controllers.LoginControllerTests.html#WAMServer_Tests_Controllers_LoginControllerTests_AuthenticateUserReturnNullIfUnableReturnsDesiredUser_
  commentId: Overload:WAMServer.Tests.Controllers.LoginControllerTests.AuthenticateUserReturnNullIfUnableReturnsDesiredUser
  isSpec: "True"
  fullName: WAMServer.Tests.Controllers.LoginControllerTests.AuthenticateUserReturnNullIfUnableReturnsDesiredUser
  nameWithType: LoginControllerTests.AuthenticateUserReturnNullIfUnableReturnsDesiredUser
- uid: server.Migrations
  name: server.Migrations
  href: api/server.Migrations.html
  commentId: N:server.Migrations
  fullName: server.Migrations
  nameWithType: server.Migrations
- uid: server.Migrations.init
  name: init
  href: api/server.Migrations.init.html
  commentId: T:server.Migrations.init
  fullName: server.Migrations.init
  nameWithType: init
- uid: server.Migrations.init.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  name: BuildTargetModel(ModelBuilder)
  href: api/server.Migrations.init.html#server_Migrations_init_BuildTargetModel_Microsoft_EntityFrameworkCore_ModelBuilder_
  commentId: M:server.Migrations.init.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  fullName: server.Migrations.init.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  nameWithType: init.BuildTargetModel(ModelBuilder)
- uid: server.Migrations.init.BuildTargetModel*
  name: BuildTargetModel
  href: api/server.Migrations.init.html#server_Migrations_init_BuildTargetModel_
  commentId: Overload:server.Migrations.init.BuildTargetModel
  isSpec: "True"
  fullName: server.Migrations.init.BuildTargetModel
  nameWithType: init.BuildTargetModel
- uid: server.Migrations.init.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Down(MigrationBuilder)
  href: api/server.Migrations.init.html#server_Migrations_init_Down_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:server.Migrations.init.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: server.Migrations.init.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: init.Down(MigrationBuilder)
- uid: server.Migrations.init.Down*
  name: Down
  href: api/server.Migrations.init.html#server_Migrations_init_Down_
  commentId: Overload:server.Migrations.init.Down
  isSpec: "True"
  fullName: server.Migrations.init.Down
  nameWithType: init.Down
- uid: server.Migrations.init.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Up(MigrationBuilder)
  href: api/server.Migrations.init.html#server_Migrations_init_Up_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:server.Migrations.init.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: server.Migrations.init.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: init.Up(MigrationBuilder)
- uid: server.Migrations.init.Up*
  name: Up
  href: api/server.Migrations.init.html#server_Migrations_init_Up_
  commentId: Overload:server.Migrations.init.Up
  isSpec: "True"
  fullName: server.Migrations.init.Up
  nameWithType: init.Up
- uid: server.tests
  name: server.tests
  href: api/server.tests.html
  commentId: N:server.tests
  fullName: server.tests
  nameWithType: server.tests
- uid: server.tests.UnitTest1
  name: UnitTest1
  href: api/server.tests.UnitTest1.html
  commentId: T:server.tests.UnitTest1
  fullName: server.tests.UnitTest1
  nameWithType: UnitTest1
- uid: server.tests.UnitTest1.Test1
  name: Test1()
  href: api/server.tests.UnitTest1.html#server_tests_UnitTest1_Test1
  commentId: M:server.tests.UnitTest1.Test1
  fullName: server.tests.UnitTest1.Test1()
  nameWithType: UnitTest1.Test1()
- uid: server.tests.UnitTest1.Test1*
  name: Test1
  href: api/server.tests.UnitTest1.html#server_tests_UnitTest1_Test1_
  commentId: Overload:server.tests.UnitTest1.Test1
  isSpec: "True"
  fullName: server.tests.UnitTest1.Test1
  nameWithType: UnitTest1.Test1
