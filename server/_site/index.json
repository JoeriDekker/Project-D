{
  "api/WAMServer.Controllers.LoginController.html": {
    "href": "api/WAMServer.Controllers.LoginController.html",
    "title": "Class LoginController | wam-server",
    "keywords": "Class LoginController Namespace WAMServer.Controllers Assembly server.dll The login controller. Responsible for logging in the user. [Route(\"api/[controller]\")] [ApiController] public class LoginController : ControllerBase Inheritance object ControllerBase LoginController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors LoginController(ILoginService, IConfiguration) The constructor of the login controller. public LoginController(ILoginService loginService, IConfiguration config) Parameters loginService ILoginService config IConfiguration The configuration of the application. Methods AuthenticateUserReturnNullIfUnable(string, string) Authenticates the user. Returns null if unable to authenticate. [NonAction] public User? AuthenticateUserReturnNullIfUnable(string email, string password) Parameters email string The email of the user. password string The password of the user. Returns User The user if authenticated, null otherwise. GenerateJSONWebToken(User) Generates a JSON web token. [NonAction] public string GenerateJSONWebToken(User userInfo) Parameters userInfo User The user information. Returns string The JSON web token. Login(LoginBody) Logs in the user. [AllowAnonymous] [HttpPost] public ActionResult Login(LoginBody body) Parameters body LoginBody The login body. Requires email and password Returns ActionResult The result of the login."
  },
  "api/WAMServer.Controllers.UsersController.html": {
    "href": "api/WAMServer.Controllers.UsersController.html",
    "title": "Class UsersController | wam-server",
    "keywords": "Class UsersController Namespace WAMServer.Controllers Assembly server.dll Controller responsible for handling user-related operations. [Authorize] [ApiController] [Route(\"/api/[controller]\")] public class UsersController : ControllerBase Inheritance object ControllerBase UsersController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UsersController(IRepository<User>, IRepository<Address>) public UsersController(IRepository<User> userRepository, IRepository<Address> addressRepo) Parameters userRepository IRepository<User> addressRepo IRepository<Address> Methods GetUser() Retrieves the current user's information. [HttpGet] [Authorize] public ActionResult<UserDTO> GetUser() Returns ActionResult<UserDTO> An ActionResult containing the current user's information if authorized; otherwise, returns an UnauthorizedResult."
  },
  "api/WAMServer.Controllers.html": {
    "href": "api/WAMServer.Controllers.html",
    "title": "Namespace WAMServer.Controllers | wam-server",
    "keywords": "Namespace WAMServer.Controllers Classes LoginController The login controller. Responsible for logging in the user. UsersController Controller responsible for handling user-related operations."
  },
  "api/WAMServer.DTO.UserDTO.html": {
    "href": "api/WAMServer.DTO.UserDTO.html",
    "title": "Class UserDTO | wam-server",
    "keywords": "Class UserDTO Namespace WAMServer.DTO Assembly server.dll public class UserDTO Inheritance object UserDTO Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UserDTO(Guid, string, string, string, Address?) public UserDTO(Guid id, string firstName, string lastName, string email, Address? address) Parameters id Guid firstName string lastName string email string address Address UserDTO(User) public UserDTO(User user) Parameters user User Properties Address public Address? Address { get; set; } Property Value Address Email public string Email { get; set; } Property Value string FirstName public string FirstName { get; set; } Property Value string Id public Guid Id { get; set; } Property Value Guid LastName public string LastName { get; set; } Property Value string"
  },
  "api/WAMServer.DTO.html": {
    "href": "api/WAMServer.DTO.html",
    "title": "Namespace WAMServer.DTO | wam-server",
    "keywords": "Namespace WAMServer.DTO Classes UserDTO"
  },
  "api/WAMServer.Data.DBInitializer.html": {
    "href": "api/WAMServer.Data.DBInitializer.html",
    "title": "Class DBInitializer | wam-server",
    "keywords": "Class DBInitializer Namespace WAMServer.Data Assembly server.dll public class DBInitializer Inheritance object DBInitializer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Seed(IApplicationBuilder) public static void Seed(IApplicationBuilder applicationBuilder) Parameters applicationBuilder IApplicationBuilder"
  },
  "api/WAMServer.Data.html": {
    "href": "api/WAMServer.Data.html",
    "title": "Namespace WAMServer.Data | wam-server",
    "keywords": "Namespace WAMServer.Data Classes DBInitializer"
  },
  "api/WAMServer.Interfaces.ILoginService.html": {
    "href": "api/WAMServer.Interfaces.ILoginService.html",
    "title": "Interface ILoginService | wam-server",
    "keywords": "Interface ILoginService Namespace WAMServer.Interfaces Assembly server.dll public interface ILoginService Methods GetUser(string) User? GetUser(string email) Parameters email string Returns User"
  },
  "api/WAMServer.Interfaces.IRepository-1.html": {
    "href": "api/WAMServer.Interfaces.IRepository-1.html",
    "title": "Interface IRepository<T> | wam-server",
    "keywords": "Interface IRepository<T> Namespace WAMServer.Interfaces Assembly server.dll public interface IRepository<T> Type Parameters T Methods AddAsync(T) Task<T> AddAsync(T entity) Parameters entity T Returns Task<T> DeleteAsync(Guid) Task<T> DeleteAsync(Guid id) Parameters id Guid Returns Task<T> Get(Guid) T? Get(Guid id) Parameters id Guid Returns T GetAllAsync() Task<IEnumerable<T>> GetAllAsync() Returns Task<IEnumerable<T>> UpdateAsync(T) Task<T> UpdateAsync(T entity) Parameters entity T Returns Task<T>"
  },
  "api/WAMServer.Interfaces.IUserRepository.html": {
    "href": "api/WAMServer.Interfaces.IUserRepository.html",
    "title": "Interface IUserRepository | wam-server",
    "keywords": "Interface IUserRepository Namespace WAMServer.Interfaces Assembly server.dll public interface IUserRepository Methods AddUserAsync(User) Task<User> AddUserAsync(User user) Parameters user User Returns Task<User> DeleteUserAsync(int) Task<User> DeleteUserAsync(int id) Parameters id int Returns Task<User> GetUser(Guid) User? GetUser(Guid id) Parameters id Guid Returns User GetUser(string) User? GetUser(string email) Parameters email string Returns User GetUserIncludingAddress(User?) User? GetUserIncludingAddress(User? user) Parameters user User Returns User GetUsersAsync() Task<IEnumerable<User>> GetUsersAsync() Returns Task<IEnumerable<User>> UpdateUserAsync(User) Task<User> UpdateUserAsync(User user) Parameters user User Returns Task<User>"
  },
  "api/WAMServer.Interfaces.html": {
    "href": "api/WAMServer.Interfaces.html",
    "title": "Namespace WAMServer.Interfaces | wam-server",
    "keywords": "Namespace WAMServer.Interfaces Interfaces ILoginService IRepository<T> IUserRepository"
  },
  "api/WAMServer.Models.Address.html": {
    "href": "api/WAMServer.Models.Address.html",
    "title": "Class Address | wam-server",
    "keywords": "Class Address Namespace WAMServer.Models Assembly server.dll Address model public class Address Inheritance object Address Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties City The city of the address. public string City { get; set; } Property Value string HouseNumber The number of the house address. public string HouseNumber { get; set; } Property Value string Id The unique identifier of the address. [Key] public Guid Id { get; set; } Property Value Guid Street The street of the address. public string Street { get; set; } Property Value string User The user of the address. [ForeignKey(\"UserId\")] public User? User { get; set; } Property Value User UserId The country of the address. public Guid? UserId { get; set; } Property Value Guid? Zip The state of the address. public string Zip { get; set; } Property Value string"
  },
  "api/WAMServer.Models.User.html": {
    "href": "api/WAMServer.Models.User.html",
    "title": "Class User | wam-server",
    "keywords": "Class User Namespace WAMServer.Models Assembly server.dll The User class represents a user in the database. public class User Inheritance object User Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors User(string, string, string, string) The default constructor. public User(string firstName, string lastName, string email, string password) Parameters firstName string The firstname of the user lastName string The lastname of the user email string The emailaddress of the user password string The password of the user Properties Address [ForeignKey(\"AddressId\")] public Address? Address { get; set; } Property Value Address AddressId public Guid? AddressId { get; set; } Property Value Guid? Email [Required] [Column(TypeName = \"varchar(100)\")] public string Email { get; set; } Property Value string FirstName [Required] [Column(TypeName = \"varchar(100)\")] public string FirstName { get; set; } Property Value string Id [Key] public Guid Id { get; set; } Property Value Guid LastName [Required] [Column(TypeName = \"varchar(100)\")] public string LastName { get; set; } Property Value string Password [Required] [Column(TypeName = \"varchar(100)\")] public string Password { get; set; } Property Value string"
  },
  "api/WAMServer.Models.WamDBContext.html": {
    "href": "api/WAMServer.Models.WamDBContext.html",
    "title": "Class WamDBContext | wam-server",
    "keywords": "Class WamDBContext Namespace WAMServer.Models Assembly server.dll The WamDBContext class is responsible for connecting to the database. public class WamDBContext : DbContext, IInfrastructure<IServiceProvider>, IDbContextDependencies, IDbSetCache, IDbContextPoolable, IResettableService, IDisposable, IAsyncDisposable Inheritance object DbContext WamDBContext Implements IInfrastructure<IServiceProvider> IDbContextDependencies IDbSetCache IDbContextPoolable IResettableService IDisposable IAsyncDisposable Inherited Members DbContext.Set<TEntity>() DbContext.Set<TEntity>(string) DbContext.OnConfiguring(DbContextOptionsBuilder) DbContext.ConfigureConventions(ModelConfigurationBuilder) DbContext.OnModelCreating(ModelBuilder) DbContext.SaveChanges() DbContext.SaveChanges(bool) DbContext.SaveChangesAsync(CancellationToken) DbContext.SaveChangesAsync(bool, CancellationToken) DbContext.Dispose() DbContext.DisposeAsync() DbContext.Entry<TEntity>(TEntity) DbContext.Entry(object) DbContext.Add<TEntity>(TEntity) DbContext.AddAsync<TEntity>(TEntity, CancellationToken) DbContext.Attach<TEntity>(TEntity) DbContext.Update<TEntity>(TEntity) DbContext.Remove<TEntity>(TEntity) DbContext.Add(object) DbContext.AddAsync(object, CancellationToken) DbContext.Attach(object) DbContext.Update(object) DbContext.Remove(object) DbContext.AddRange(params object[]) DbContext.AddRangeAsync(params object[]) DbContext.AttachRange(params object[]) DbContext.UpdateRange(params object[]) DbContext.RemoveRange(params object[]) DbContext.AddRange(IEnumerable<object>) DbContext.AddRangeAsync(IEnumerable<object>, CancellationToken) DbContext.AttachRange(IEnumerable<object>) DbContext.UpdateRange(IEnumerable<object>) DbContext.RemoveRange(IEnumerable<object>) DbContext.Find(Type, params object[]) DbContext.FindAsync(Type, params object[]) DbContext.FindAsync(Type, object[], CancellationToken) DbContext.Find<TEntity>(params object[]) DbContext.FindAsync<TEntity>(params object[]) DbContext.FindAsync<TEntity>(object[], CancellationToken) DbContext.FromExpression<TResult>(Expression<Func<IQueryable<TResult>>>) DbContext.Database DbContext.ChangeTracker DbContext.Model DbContext.ContextId DbContext.SavingChanges DbContext.SavedChanges DbContext.SaveChangesFailed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors WamDBContext(DbContextOptions<WamDBContext>) public WamDBContext(DbContextOptions<WamDBContext> options) Parameters options DbContextOptions<WamDBContext> Properties Addresses public DbSet<Address> Addresses { get; set; } Property Value DbSet<Address> Users public DbSet<User> Users { get; set; } Property Value DbSet<User>"
  },
  "api/WAMServer.Models.html": {
    "href": "api/WAMServer.Models.html",
    "title": "Namespace WAMServer.Models | wam-server",
    "keywords": "Namespace WAMServer.Models Classes Address Address model User The User class represents a user in the database. WamDBContext The WamDBContext class is responsible for connecting to the database."
  },
  "api/WAMServer.Records.Bodies.ErrorBody.html": {
    "href": "api/WAMServer.Records.Bodies.ErrorBody.html",
    "title": "Class ErrorBody | wam-server",
    "keywords": "Class ErrorBody Namespace WAMServer.Records.Bodies Assembly server.dll public record ErrorBody : IEquatable<ErrorBody> Inheritance object ErrorBody Implements IEquatable<ErrorBody> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ErrorBody(string) public ErrorBody(string Error) Parameters Error string Properties Error public string Error { get; init; } Property Value string"
  },
  "api/WAMServer.Records.Bodies.html": {
    "href": "api/WAMServer.Records.Bodies.html",
    "title": "Namespace WAMServer.Records.Bodies | wam-server",
    "keywords": "Namespace WAMServer.Records.Bodies Classes ErrorBody"
  },
  "api/WAMServer.Records.LoginBody.html": {
    "href": "api/WAMServer.Records.LoginBody.html",
    "title": "Class LoginBody | wam-server",
    "keywords": "Class LoginBody Namespace WAMServer.Records Assembly server.dll public record LoginBody : IEquatable<LoginBody> Inheritance object LoginBody Implements IEquatable<LoginBody> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors LoginBody(string, string) public LoginBody(string Email, string Password) Parameters Email string Password string Properties Email public string Email { get; init; } Property Value string Password public string Password { get; init; } Property Value string"
  },
  "api/WAMServer.Records.html": {
    "href": "api/WAMServer.Records.html",
    "title": "Namespace WAMServer.Records | wam-server",
    "keywords": "Namespace WAMServer.Records Classes LoginBody"
  },
  "api/WAMServer.Repositories.DbAddressRepository.html": {
    "href": "api/WAMServer.Repositories.DbAddressRepository.html",
    "title": "Class DbAddressRepository | wam-server",
    "keywords": "Class DbAddressRepository Namespace WAMServer.Repositories Assembly server.dll This class is responsible for handling the database operations for the Address entity. public class DbAddressRepository : IRepository<Address> Inheritance object DbAddressRepository Implements IRepository<Address> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DbAddressRepository(WamDBContext) public DbAddressRepository(WamDBContext context) Parameters context WamDBContext Methods AddAsync(Address) Adds an address to the database in an asynchronous manner. public Task<Address> AddAsync(Address entity) Parameters entity Address The entity to be added. In this case the address. Returns Task<Address> The created address. DeleteAsync(Guid) public Task<Address> DeleteAsync(Guid id) Parameters id Guid Returns Task<Address> Get(Guid) Gets an address from the database by its id. public Address? Get(Guid id) Parameters id Guid The id that's used for fetching the address Returns Address The address object if it exists in the database, returns null if it doesnt exist. GetAllAsync() public Task<IEnumerable<Address>> GetAllAsync() Returns Task<IEnumerable<Address>> UpdateAsync(Address) public Task<Address> UpdateAsync(Address entity) Parameters entity Address Returns Task<Address>"
  },
  "api/WAMServer.Repositories.DbUserRepository.html": {
    "href": "api/WAMServer.Repositories.DbUserRepository.html",
    "title": "Class DbUserRepository | wam-server",
    "keywords": "Class DbUserRepository Namespace WAMServer.Repositories Assembly server.dll This class is responsible for handling the database operations for the User entity. public class DbUserRepository : IRepository<User> Inheritance object DbUserRepository Implements IRepository<User> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DbUserRepository(WamDBContext) public DbUserRepository(WamDBContext context) Parameters context WamDBContext Methods AddAsync(User) Adds a user to the database in an asynchronous manner. public Task<User> AddAsync(User entity) Parameters entity User The entity to be added, in this case the user. Returns Task<User> The created user. DeleteAsync(Guid) public Task<User> DeleteAsync(Guid id) Parameters id Guid Returns Task<User> Get(Guid) Gets a user from the database by it's id. public User? Get(Guid id) Parameters id Guid The id of the user to be fetched Returns User Returns the user from the database if it exists, otherwise a null. GetAllAsync() public Task<IEnumerable<User>> GetAllAsync() Returns Task<IEnumerable<User>> UpdateAsync(User) public Task<User> UpdateAsync(User entity) Parameters entity User Returns Task<User>"
  },
  "api/WAMServer.Repositories.html": {
    "href": "api/WAMServer.Repositories.html",
    "title": "Namespace WAMServer.Repositories | wam-server",
    "keywords": "Namespace WAMServer.Repositories Classes DbAddressRepository This class is responsible for handling the database operations for the Address entity. DbUserRepository This class is responsible for handling the database operations for the User entity."
  },
  "api/WAMServer.Services.DBLoginService.html": {
    "href": "api/WAMServer.Services.DBLoginService.html",
    "title": "Class DBLoginService | wam-server",
    "keywords": "Class DBLoginService Namespace WAMServer.Services Assembly server.dll Service for handling user authentication through the database. public class DBLoginService : ILoginService Inheritance object DBLoginService Implements ILoginService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DBLoginService(WamDBContext) public DBLoginService(WamDBContext context) Parameters context WamDBContext Methods GetUser(string) Retrieves a user from the database based on their email. public User? GetUser(string email) Parameters email string The email of the user to retrieve. Returns User The user corresponding to the provided email, if found; otherwise, null."
  },
  "api/WAMServer.Services.html": {
    "href": "api/WAMServer.Services.html",
    "title": "Namespace WAMServer.Services | wam-server",
    "keywords": "Namespace WAMServer.Services Classes DBLoginService Service for handling user authentication through the database."
  },
  "api/WAMServer.Startup.html": {
    "href": "api/WAMServer.Startup.html",
    "title": "Class Startup | wam-server",
    "keywords": "Class Startup Namespace WAMServer Assembly server.dll The Startup class is the entry point of the application. public class Startup Inheritance object Startup Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Start() Responsible for starting the application. public void Start()"
  },
  "api/WAMServer.Tests.Controllers.LoginControllerTests.html": {
    "href": "api/WAMServer.Tests.Controllers.LoginControllerTests.html",
    "title": "Class LoginControllerTests | wam-server",
    "keywords": "Class LoginControllerTests Namespace WAMServer.Tests.Controllers Assembly server.tests.dll public class LoginControllerTests Inheritance object LoginControllerTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors LoginControllerTests() public LoginControllerTests() Methods AuthenticateUserReturnNullIfUnableReturnsDesiredUser() [Fact] public void AuthenticateUserReturnNullIfUnableReturnsDesiredUser()"
  },
  "api/WAMServer.Tests.Controllers.html": {
    "href": "api/WAMServer.Tests.Controllers.html",
    "title": "Namespace WAMServer.Tests.Controllers | wam-server",
    "keywords": "Namespace WAMServer.Tests.Controllers Classes LoginControllerTests"
  },
  "api/WAMServer.Validation.InputValidation.html": {
    "href": "api/WAMServer.Validation.InputValidation.html",
    "title": "Class InputValidation | wam-server",
    "keywords": "Class InputValidation Namespace WAMServer.Validation Assembly server.dll public static class InputValidation Inheritance object InputValidation Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods IsValidEmail(string) public static bool IsValidEmail(string input) Parameters input string Returns bool"
  },
  "api/WAMServer.Validation.html": {
    "href": "api/WAMServer.Validation.html",
    "title": "Namespace WAMServer.Validation | wam-server",
    "keywords": "Namespace WAMServer.Validation Classes InputValidation"
  },
  "api/WAMServer.html": {
    "href": "api/WAMServer.html",
    "title": "Namespace WAMServer | wam-server",
    "keywords": "Namespace WAMServer Classes Startup The Startup class is the entry point of the application."
  },
  "api/server.Migrations.AddedHouseNumber.html": {
    "href": "api/server.Migrations.AddedHouseNumber.html",
    "title": "Class AddedHouseNumber | wam-server",
    "keywords": "Class AddedHouseNumber Namespace server.Migrations Assembly server.dll A base class inherited by each EF Core migration. [DbContext(typeof(WamDBContext))] [Migration(\"20240514132429_AddedHouseNumber\")] public class AddedHouseNumber : Migration Inheritance object Migration AddedHouseNumber Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "api/server.Migrations.Init.html": {
    "href": "api/server.Migrations.Init.html",
    "title": "Class Init | wam-server",
    "keywords": "Class Init Namespace server.Migrations Assembly server.dll A base class inherited by each EF Core migration. [DbContext(typeof(WamDBContext))] [Migration(\"20240514125652_Init\")] public class Init : Migration Inheritance object Migration Init Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "api/server.Migrations.MadeAddressNullable.html": {
    "href": "api/server.Migrations.MadeAddressNullable.html",
    "title": "Class MadeAddressNullable | wam-server",
    "keywords": "Class MadeAddressNullable Namespace server.Migrations Assembly server.dll A base class inherited by each EF Core migration. [DbContext(typeof(WamDBContext))] [Migration(\"20240514133323_MadeAddressNullable\")] public class MadeAddressNullable : Migration Inheritance object Migration MadeAddressNullable Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "api/server.Migrations.html": {
    "href": "api/server.Migrations.html",
    "title": "Namespace server.Migrations | wam-server",
    "keywords": "Namespace server.Migrations Classes AddedHouseNumber A base class inherited by each EF Core migration. Init A base class inherited by each EF Core migration. MadeAddressNullable A base class inherited by each EF Core migration."
  },
  "api/server.Migrations.init.html": {
    "href": "api/server.Migrations.init.html",
    "title": "Class init | wam-server",
    "keywords": "Class init Namespace server.Migrations Assembly server.dll A base class inherited by each EF Core migration. [DbContext(typeof(WamDBContext))] [Migration(\"20240426093935_init\")] public class init : Migration Inheritance object Migration init Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "api/server.tests.UnitTest1.html": {
    "href": "api/server.tests.UnitTest1.html",
    "title": "Class UnitTest1 | wam-server",
    "keywords": "Class UnitTest1 Namespace server.tests Assembly server.tests.dll public class UnitTest1 Inheritance object UnitTest1 Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Test1() [Fact] public void Test1()"
  },
  "api/server.tests.html": {
    "href": "api/server.tests.html",
    "title": "Namespace server.tests | wam-server",
    "keywords": "Namespace server.tests Classes UnitTest1"
  },
  "docs/getting-started.html": {
    "href": "docs/getting-started.html",
    "title": "Getting Started | wam-server",
    "keywords": "Getting Started"
  },
  "docs/introduction.html": {
    "href": "docs/introduction.html",
    "title": "Introduction | wam-server",
    "keywords": "Introduction Hello world"
  },
  "index.html": {
    "href": "index.html",
    "title": "WAM-Server documentation | wam-server",
    "keywords": "WAM-Server documentation This site contains the documentation for the WAM-Server. Information about the WAM-Server and the underlying functionalities can be found in the Docs tab. Information about the API can be found in the API tab."
  }
}